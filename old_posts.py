# -*- coding: utf-8 -*-

posts = (7,'What’s the point?','So, it might be a good time to talk about the goal of this blog.\n\nAs you can tell from the title, I like computer science.  I also like math, typesetting, writing, editing, and all sorts of other things.  I am currently writing a book as well as working full time, and a dozen other projects at a time.  This blog I intend to be a sort of place for me to discuss things on my mind regarding these topics, especially writing, science, math, etc.  I also intend to write little snippets and articles about topics important or interesting to me.\n\nPlease feel free to comment and let me know what you think about these things.  The topics I will publish are mostly for my own enjoyment, as I like to write, but I would be pleased if others found anything I said useful.\n\nCheers.','whats_the_point','','2007-06-06 19:52:43'),(8,'Another day, another page.','So I am currently involved with my book and finishing my dissertation.  Both have been giving me a lot of motivation lately to finish them.\n\nI turned in another chapter of my book to my editors on Sunday.  It\'s still early on in the book, though they are starting to rearrange things, so it hasn\'t gotten too interesting.  The next chapters should be very exciting though: I get to typeset a lot of math, and I get to have a bit more fun with more material that I enjoy.\n\nSo far, my editors have been nice, but a little lost sometimes when it comes to the low-level details.  They original gave me a Word template to use, where the headings and whatnot were rendered in (shudder) Arial, with the text in the very plain Times New Roman.  I agreed to use it on the condition that it would be filtered through InDesign where Real Fonts(tm) would be used to make it into a book, and I would be involved in this process if I wanted to be.\n\nHowever, as time passed, they realized how difficult it would be to do justice to the mathematics of the book using Word and InDesign, so apparently they are typesetting the book in TeX.  This makes me fairly happy.  Apparently the main text font is going to be Palatino, which is one of my very favorite fonts, so this also made me happy.\n\nI have not been too happy, though, with the way LaTeX\'s <code>mathpazo</code> package handled Palatino equations.  I decided to try the XeLaTeX solution, and have had mixed results.  XeLaTeX, essentially, is LaTeX, but updated with modern fonts in mind (it can use TrueType, OpenType, Postscript, and TeX fonts), as well as full Unicode support.  It\'s supposed to better integrate Palatino fonts into math mode, but so far it spits everything out in Computer Modern, and I am still trying to figure out what is going wrong.  So far, though, I have quite enjoyed XeLaTeX.\n\nDissertation update: I turned in a form I needed to let them know that yes, in fact, I do intend to finish everything this summer.  Working on that as well.  I have my old lab setup working here in the home office, and have been crunching away at things.  Will post more when I have more.\n\nLaters!','another_day_another_page','','2007-06-06 20:07:00'),(9,'XeTeX is no good with Palatino math, and gwTeX ruins teTeX.','So I determined, after several hours over the last few days, that <a href=\"http://scripts.sil.org/XeTeX\">XeTeX</a> just <strong>will not</strong> have anything to do with Palatino math fonts.  I even tried an experimental <code>unicode-math</code> package.  Absolutely nothing seems to be able to get the two to work together: the <code>fontspec</code> package seems to make it ignore the <code>mathpazo</code> and <code>pxfonts</code> package, no matter where they come in the preamble.\n\nI decided to give up, and go back to plain LaTeX with the <code>pxfonts</code> package.  This stinks, because I really like the Unicode support and the hassle-free way of selecting text fonts.\n\nThere is also another lesson I learned: having Fink teTeX, the old MacTeX teTeX, as well as the new LiveCD 2007 version of gwTeX installed on the same Mac will cause great confusion, and many lost fonts.  I decided to wipe all three installations, and install the actual full MacTeX 2007 distribution, which cleaned up some of the mess going on.','xetex_is_no_good_with_palatino_math_and_gwtex_ruins_tetex','','2007-06-08 20:40:39'),(10,'Python (F)FTW!','Some of the work I have been doing involves taking the <a href=\"http://en.wikipedia.org/wiki/Fast_Fourier_Transform\">Fast Fourier Transform</a> of a set of samples.  I originally thought that this needed to be done in C, using <a href=\"http://www.fftw.org/\">FFTW</a>. However, it leads to messes like\n\n<pre lang=\"c\">fftw_complex *in, *out;\nin = (fftw_complex*) fftw_malloc(sizeof(fftw_complex) * N);\nout = (fftw_complex*) fftw_malloc(sizeof(fftw_complex) * N);\nfftw_plan p;\np = fftw_plan_dft_1d(N, in, out, FFTW_FORWARD, FFTW_ESTIMATE);\n\n/* read in samples */\n\nfftw_execute(p);\n\n/* do stuff */\n\nfftw_destroy_plan(p);\nfftw_free(in);\nfftw_free(out);\n</pre>\n\nIn Python with <a href=\"http://numpy.scipy.org/\"><code>numpy</code>/<code>scipy</code></a> installed, this is so much easier.\n<pre lang=\"c\">from numpy import *\n\n# read in samples\n\nfftout = fft(samples)\n</pre>\n\nAnd that\'s it! I should have been using nothing but Python for nearly everything from the start, and screw C.','python_fftw','','2007-06-17 17:26:57'),(11,'Quality playing cards','One of my previous annoyances in life was the lack of a good set of EPS / PDF playing cards.  For the book I am currently writing, and possibly for a future one, I wanted to show some examples, and nice figures can say so much more than some dull text.  But finding some good playing cards that weren\'t ripped from Windows Solitaire or were at terrible resolution has been very difficult.\n\nNow, the normal cards, Ace through Ten, would be easy to make in MetaPost.  Heck, the shapes are even part of Unicode.  But, the real problem is the face cards.  I am not an artist, and I don\'t have the time, so I just can\'t make some new face cards.  I also couldn\'t seem to find even any high-res scans of the Bicycle cards faces, even though I would imagine that they are public domain by now (since those date back over 100 years).\n\nI stumbled across David Bellot\'s <a href=\"http://david.bellot.free.fr/svg-cards/\">SVG cards</a> several times, but each time thought it would just be too much hassle to convert them to EPS or PDF, since they are distributed as one giant SVG file, rather than individually.  But, I got bored, and opened it in Illustrator.  I figured out a way to convert them fairly quickly to EPS (ungrouping, and some quick keyboard copy-paste-save-delete-repeat action).  I then wrote a script to clean out all of the Illustrator garbage using Ghostscript, and save copies in PDF as well.\n\nI packaged them up as well.  I talked to David, and he said he might even distribute them along with the official version in the future, so that even more people might get some use out of them (since nobody who cares about high quality playing cards probably reads my blog).  But for those of you interested, on the right-hand side of this page under \"Resources\", you can download them from here.','quality_playing_cards','','2007-06-24 09:03:48'),(12,'Algorithm styling?','So I\'ve started to come across the algorithm-heavy portion of the book, and starting to come across some issues.  Specifically, how should I properly typeset algorithms?\n\nMy requirements are that the algorithms should be\n<ul>\n	<li>Clean</li>\n	<li>Precise</li>\n	<li>Not heavy with obscure symbols</li>\n	<li>Generic</li>\n</ul>\n\nThis means things like the Knuth style (as he uses in <em>The Art of Computer Programming</em>, which is widely copied) and the Cormen, et al. style (as used in the monolithic <em>Algorithms</em>, 2nd ed., also widely copied are out).  Knuth\'s still has some good pointers, but it seems like there is too much there (such as a small summary of the step at the beginning, along with step numbers with the letter of the algorithm in front).  I like how verbose he is: others seem too compact.  And with Cormen, there is too much use of symbols, and computer programming pseudo-code.\n\nMy current solution is some kind of hybrid between normal prose text and a normal algorithmic style, though I avoid using symbols like &larr; and &lfoor;<em>x</em>&rfloor; in exchange for phrasing like &quot;Set <em>x</em> to ...&quot;, even more so than Knuth.  Though computer scientists and strong programmers might find the way a bit clunky, I find breaking every step down into more discrete steps, with explanations at each step to be potentially helpful to a confused reader.  However, I also want things to be minimalistic when possible: the meat appears immediately, so that it is possible to stream through it with your eyes very quickly.\n\nFor example, let\'s take a simple algorithm, computing the sequence 1 + 2 + 3 + &hellip; + <em>n</em>, in each of the three methods.\n\nCormen, et al., might write:\n\n\n\n<blockquote>\n<div style=\"font-variant: small-caps;\">Sum-to-n(<em>n</em>)</div><br />\n&emsp;1&emsp; <em>x</em> &larr; 1</em><br />\n&emsp;2&emsp; <em>s</em> &larr; 1</em><br />\n&emsp;3&emsp; <b>While</b> <em>x</em> &le; <em>n</em><br />\n&emsp;4&emsp;&emsp;<em>x</em> &larr; <em>x</em> + 1<br />\n&emsp;5&emsp;&emsp;<em>s</em> &larr; <em>s</em> + x<br />\n&emsp;6&emsp;<b>Return</b> <em>s</em>\n</blockquote>\n\nWhereas a Knuthian way might be:\n\n<blockquote>\n<b>Algorithm A</b> (adding the series of <em>m</em> numbers).  This algorithm outputs the sum of all the integers between 1 and <em>n</em>.\n\n&emsp;K1. [<em>Initialize</em>.]. Set <em>x</em> &larr; 1, <em>s</em> &larr; 1.<br />\n&emsp;K2. [<em>Test for loop end</em>.]. If <em>x</em> = <em>n</em>, terminate.  The sum will be <em>s</em>.<br />\n&emsp;K3. [<em>Loop through</em>.]. Set <em>x</em> &larr; <em>x</em> + 1, <em>s</em> &larr; <em>s</em> + <em>x</em>.<br />\n&emsp;K4. [<em>Repeat</em>.]. Go back to K2.<br />\n</blockquote>\n\nMy proposed way is similar, but with a little less <em>stuff</em> in it:\n\n<blockquote>\nThe following algorithm illustrates how to sum up the integers from 1 to <em>n</em>, inclusive of 1 and <em>n</em>.\n\n&emsp;1. Set <em>x</em> = 1, and <em>s</em> = 1.  These will represent the current number to be added and the working sum, respectively.<br />\n&emsp;2. If <em>x</em> = <em>n</em>, then we can stop, and the sum will be <em>s</em>.<br />\n&emsp;&emsp;(a) Set <em>x</em> = <em>x</em> + 1, <em>s</em> = <em>s</em> + <em>x</em>. We are incrementing the counter variable <em>x</em> and updating our sum.<br />\n&emsp;&emsp;(b) Go back to step 2.<br />\n</blockquote>\n\nOut of the above, Knuth\'s looks best on this web page, but I think that mine can look better with wide margins, and provides for a little less ambiguity.\n\nAnd happy belated 4th of July to everyone!','algorithm_styling','','2007-07-05 17:08:50'),(15,'Reason why I am writing','As I was looking through some references, I came across the following diagram, from <a href=\"http://www.lacim.uqam.ca/~chateau/fichiers/stagemaitrise.ps\">Practical Public Key Crytposystems</a>:\n\n<img src=\"http://www.caswenson.com/wp-content/uploads/2007/07/bad-diagram.png\" alt=\"Bad Diagram\" />\n\nDiagrams like this make me cry.  I hope none of mine look this bad.','reason_why_i_am_writing','','2007-07-22 15:09:15'),(16,'Some rules of typesetting','Often when reading articles or books, there are several problems that can be easily corrected that detract from the work\'s aesthetic appeal.\n\n\n<b>Don\'t use vertical rules.</b> In typesetting, a rule is a line.  The standard LaTeX <code>tabular</code> structure encourages us to use such monstrosities as <code>\\begin{tabular}{|c|c|}</code>, putting vertical rules between every column.  This is often an amateur mistake of typesetting: seldom do professionally typeset works contain vertical rules.\n\n<b>Use thicker rules, and vary the thickness in tables.</b> The standard size for a rule should be 1pt.  Lines that are too think just look weak.  A nice thick, but not too thick, rule will give it a more professional, feeling.  When doing tables, having even thicker rules for the top and bottom of the table, and medium thicknesses elsewhere add elegance to the table.  The LaTeX package <code>booktabs</code> gives the appropriate commands <code>\\toprule</code>, <code>\\midrule</code>, and <code>\\bottomrule</code>.\n\n<b>Use fixed-width fonts for code, email address, web address, and file names.</b> In books, we should never see \"Email address: a@b.com\" or \"Open the file readme.1st\".  It\'s infinitely better to use \"Email address: <code>a@b.com</code>\" and \"Open the file <code>readme.1st</code>\".  And while you\'re at it, stop saying \"e-mail\".  <a href=\"http://www-cs-faculty.stanford.edu/~knuth/email.html\">There is no hyphen.  It\'s \"email\".</a>\n\n<b>Either indent your paragraphs, or add a line space between them.</b> But please, please, you cannot have no spacing between your paragraphs, and not indent.\n\n<br />\n\nTherere are plenty more rules that I could write.  Once you develop an eye for this stuff, these patterns will just fall into place.  If in doubt, consult a good style manual (<a href=\"http://www.amazon.com/gp/product/0226104036?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0226104036\">The Chicago Manual of Style</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0226104036\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> is always my preference), or even just read through a professionally-typeset book to see how they addressed that typesetting issue.  Often, books written before digital typesetting are good for this, when professional typesetters were used to make the books.  Avoid self-published books (vanity presses) like the plague though.  I have seen these come out with the body text in Arial, and most of the diagrams drawn in MS Paint.  Although I left it unspoken before, Arial is inappropriate to use for the body text of a book or article, and MS Paint is pretty much never acceptable as a tool for creating professional graphics.','some_rules_of_typesetting','','2007-09-03 10:29:46'),(17,'Two TeX/LaTeX period spacing gotchas','An easy thing to forget about TeX is that it tries to guess what you mean, and can get it wrong.  In this case, I am talking about periods.\n\nTeX interprets a period based on the previous letter.  If the previous letter is a capital, like \"D. Knuth\", it puts a normal space in, thinking that you are giving an initial.  If it is lowercase, like \"I went to the store.  It was nice\", it assumes you meant a period that ends a sentence, which has about 1 to 1.5 spaces after it (depending on the justification needs and the style settings you prefer).\n\nBut what if you have a sentence that ends with, say, \"which is why I like NINJAS.\"  Here, the period ends a sentence.  Or how about, \"all of the misc. tools\", where the period doesn\'t?\n\nA quick way to check to see if you made an oops doing this in your source file is to run the two scripts:\n\n<pre lang=\"bash\">grep \"[A-Z]\\. \" *.tex</pre>\nThis checks for the first case, while this:\n<pre lang=\"bash\">grep \"[a-z]\\. [a-z]\" *.tex</pre>\nchecks for the second case.\n\nTo fix the case with the capital and the period, change \"<code>NINJAS. </code>\" to \"<code>NINJAS\\@. </code>\", to tell TeX to treat the period as a sentence stopper.\n\nFor the other case, with the lowercase and the period, change \"<code>misc. tools</code>\" to \"<code>misc.\\ tools</code>\", to tell TeX to treat it as a normal space.\n\nI strongly recommend that anyone who uses TeX or LaTeX should, at some point, read <a href=\"http://www.amazon.com/gp/product/0201134489?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0201134489\">The TeXbook</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0201134489\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />, by Donald Knuth, and find out what really goes on under the hood.\n\nThanks to <a href=\"http://john.regehr.org/latex/\">John</a> for giving one of the scripts and reminding me of this.','two_texlatex_period_spacing_gotchas','','2007-09-13 20:03:57'),(18,'TeX Italic Gotcha','As an epilogue to the previous post, there is another common gotcha of TeX (and LaTeX).  Immediately after using italic or slanted text (such as with <code>\\emph</code>, <code>\\it</code>, <code>\\sl</code>, etc.), TeX will put in a standard space.  However, the italic or slant from the previous letter will stick out, making the next (roman, or whatever) text be too close to the previous.  The fix is to insert an italic correction space, <code>\\/</code>, immediately after italic text.\n\nTo catch yourself accidentally not doing this, run the following:\n\n<pre lang=\"bash\">grep \"\\\\emph{.*} \" *.tex</pre>','tex_italic_gotcha','','2007-09-18 16:55:42'),(19,'Banned Words: Fantasy Novel Edition','There are certain words that are just used too often in fantasy book titles.  (The same goes for other genres, but that is another post.)\n\nI have constructed the following list of banned words in the titles of books.  Not that I won\'t read books with these words in their titles, necessarily, or that there are no good books that use these words, it\'s just that I am sick of seeing books called \"The Dragon Wizard Tales\" or \"Legend of the Elf Knight\".  The words are just overused, and they immediately put me off.\n\nThe banned words are, in no particular order:\n\nwizard\nring\nlord\nelf\ntime\ndragon\nwinter\ncrown\nking\nmagic\nmagician\nwand\nsword\nfire\nspell\ndemon\ndune\ntale\nlegend\nwyrm\nfate\nknight\nship\nbard\ngod\ngods\ntower','banned_words_fantasy_novel_edition','','2007-09-28 19:12:18'),(20,'This is going to be a long month','October has just gotten started, and it\'s already incredibly stressful.\n\nThe book\'s nearly done, but there\'s a lot of edits, reviews, meetings, and general <b>work</b> that has to be done to get this thing through.  And I thought writing it was the hard part!\n\nMy dissertation is nearly done.  See previous paragraph.\n\nI also have another paper that I wanted to throw together next week.  I might settle for finishing all of the research for it.\n\nI am already starting to think about my next projects.  Supposedly, by the end of this month, my plate will be empty with things due in the immediate (or even near) future.  That\'s a weird feeling.  I\'ve already started thinking about another book, as well as a website or two that I might want to throw together.  I also like the idea of having more spare time for some hobbies for once. (Maybe karate?  Toastmasters?  More time for board and card games?)\n\nAnd so what am I doing that isn\'t finishing up my current work?  Posting here.','this_is_going_to_be_a_long_month','','2007-10-04 17:48:56'),(21,'Unread book meme','Per <a href=\"http://www.thursdaybram.com\">Thursday Bram</a>\'s blog:\n\n<blockquote>These are the top 106 books most often marked as “unread” by LibraryThing’s users. As usual, bold what you have read, italicise what you started but couldn’t finish, and strike through what you couldn’t stand. Add an asterisk to those you’ve read more than once. Underline those on your to-read list.\n</blockquote>\n\n<i>1984</i>\n<em>A Clockwork Orange</em>\nA Confederacy of Dunces\nA Heartbreaking Work of Staggering Genius\n<strike>A People’s History of the United States: 1492-present</strike>\nA Portrait of the Artist as a Young Man\nA Short History of Nearly Everything\nA Tale of Two Cities\n<span style=\"text-decoration: underline\">American Gods</span>\n<span style=\"text-decoration: underline\">Anansi Boys</span>\nAngela’s Ashes: a memoir\n<strike>Angels & Demons</strike>\nAnna Karenina\n<strong>Atlas Shrugged</strong>*\nBeloved\nBrave New World\n<strong>Catch-22</strong>\nCloud Atlas\n<span style=\"text-decoration: underline\">Collapse: How Societies Choose to Fail or Succeed</span>\nCrime and Punishment\n<em>Cryptonomicon</em>\nDavid Copperfield\nDon Quixote\nDracula\nDubliners\n<strong>Dune</strong>\n<span style=\"text-decoration: underline\">Eats, Shoots & Leaves</span>\n<span style=\"text-decoration: underline\">Emma</span>\n<span style=\"text-decoration: underline\">Foucault’s Pendulum</span>\nFrankenstein\n<span style=\"text-decoration: underline\">Freakonomics: a Rogue Economist Explores the Hidden Side of Everything</span>\nGravity’s Rainbow\n<strong>Great Expectations</strong>\nGulliver’s Travels\n<em>Guns, Germs, and Steel: the Fates of Human Societies</em>\nIn Cold Blood: A True Account of a Multiple Murder and Its Consequences\nJane Eyre\n<span style=\"text-decoration: underline\">Jonathan Strange & Mr Norrell</span>\nLes Misérables\nLife of Pi: a novel\nLolita\n<span style=\"text-decoration: underline\">Love in the Time of Cholera</span>\nMadame Bovary\nMansfield Park\n<strong>Memoirs of a Geisha</strong>\nMiddlemarch\nMiddlesex\nMoby Dick\nMrs. Dalloway\n<span style=\"text-decoration: underline\">Neverwhere</span>\nNorthanger Abbey\nOliver Twist\nOn the Road\n<span style=\"text-decoration: underline\">One Flew over the Cuckoo’s Nest</span>\n<span style=\"text-decoration: underline\">One Hundred Years of Solitude</span>\nOryx and Crake: a novel\nPersuasion\nPride and Prejudice\n<span style=\"text-decoration: underline\">Quicksilver</span>\nReading Lolita in Tehran: a memoir in books\nSense and Sensibility\n<span style=\"text-decoration: underline\">Slaughterhouse-five</span>\nTess of the D’Urbervilles\nThe Aeneid\nThe Amazing Adventures of Kavalier and Clay\nThe Blind Assassin\nThe Brothers Karamazov\nThe Canterbury Tales\n<span style=\"text-decoration: underline\">The Catcher in the Rye</span>\n<span style=\"text-decoration: underline\">The Confusion</span>\nThe Corrections\n<em>The Count of Monte Cristo</em>\nThe Curious Incident of the Dog in the Night-time\n<strong>The Fountainhead</strong>*\nThe God of Small Things\nThe Grapes of Wrath\nThe Historian: a novel\n<strong>The Hobbit</strong>\nThe Hunchback of Notre Dame\n<strong>The Iliad</strong>\nThe Inferno\nThe Kite Runner\nThe Mists of Avalon\nThe Name of the Rose\n<strong>The Odyssey</strong>\n<em>The Once and Future King</em>\nThe Picture of Dorian Gray\nThe Poisonwood Bible: a novel\nThe Prince\nThe Satanic Verses\nThe Scarlet Letter\nThe Sound and the Fury\nThe Three Musketeers\n<strike><strong>The Time Traveler’s Wife</strong></strike>\nThe Unbearable Lightness of Being\nTo the Lighthouse\nTreasure Island\n<span style=\"text-decoration: underline\">Ulysses</span>\nVanity Fair\nWar and Peace\nWatership Down\n<span style=\"text-decoration: underline\">Wicked: the life and times of the wicked witch of the West</span>\nWuthering Heights\nZen and the Art of Motorcycle Maintenance: an Inquiry into Values','unread_book_meme','','2007-10-13 20:13:55'),(22,'Happy Turkey Day everyone!','I haven\'t updated in a while.  But I will start again shortly.','happy_turkey_day_everyone','','2007-11-22 14:28:53'),(23,'Please, please use UTF-8','I am currently migrating a site from an older WordPress setup to a fresh new server.  I obtained MySQL backups and all of the files from the site.\n\nMy problem is that the primary way of posting was by writing a document in Microsoft Word, copy-pasting it to Firefox or IE into a version of WordPress set up for UTF-8, running on a PHP installation using ISO-8859-1, and ending up in a MySQL database setup as Latin1.  It is then exported out into the dump, and now I have to figure out how to clean up the dump or MySQL instance so that I get \"don\'t\" and not \"donâ€™t\".\n\nSo please, I beg of you, read <a href=\"http://www.joelonsoftware.com/articles/Unicode.html\">this article</a> and always use UTF-8 in everything you do.\n\nEdit: Also, if you run into such problems, two of the best helps I have found were <a href=\"http://myhep.com/2007/1/25/mysql-on-the-move-from-latin1-to-utf8\">here</a> (though you may want to modify it a bit, since it changes smart quotes to dumb quotes) and <a href=\"http://www.oreillynet.com/onlamp/blog/2006/01/turning_mysql_data_in_latin1_t.html\">here</a>.','please_please_use_utf8','','2007-11-27 23:57:20'),(24,'Painful sed script of Wordpress doom','So, I figured out most of the problems, and how to solve them.\n\nProblem one: pasting text from Word stores the document in <a href=\"http://en.wikipedia.org/wiki/Windows-1252\">Windows-1252</a> encoding.\n\nProblem two: this is stored in MySQL, by default, in the deceptively-similar-to-but-incompatible-with-1252 <a href=\"http://en.wikipedia.org/wiki/ISO/IEC_8859-1\">ISO-8859-1</a> encoding.\n\nProblem three: Wordpress is smart, and automatically converts 1252 into HTML entities, which hides the problem until you dump the database.\n\nProblem four: <a href=\"http://en.wikipedia.org/wiki/Utf-8\">UTF-8</a> is freely intermingled with 1252 text in the entries.\n\nProblem five: Windows does really weird things to encode non-1252 characters (like <a href=\"http://en.wikipedia.org/wiki/Smart_quotes\">smart quotes</a>) in a 1252 character stream.\n\nProblem six: Some piece of software went wrong at some point (probably PHP or phpMyAdmin) , and converted the 1252, non-1252 weird smart quotes, ISO-8859-1, and UTF-8 codes to UTF-8 (by converting the byte literal values instead of the underlying characters, which for UTF-8 codes means that you have to decode twice to get the real answer), but MySQL keeps the text marked as ISO-8859-1.\n\nProblem seven: you are me, and you have 2,300 of these invalid characters in a MySQL dump that needs to be imported.\n\nProblem eight: Mac OS X, by default, uses a sub-standard version of <a href=\"http://www.gnu.org/software/sed/\">sed</a> that does not support replacement of literal values (<code>\"\\xC2\"</code>, for example), making it impossible to replace any non-ASCII characters.\n\nSolution: install sed from <a href=\"http://finkproject.org/\">Fink</a>, and run the following sed script on your MySQL dump:\n\n<pre>\ns/DEFAULT CHARSET=latin1/DEFAULT CHARSET=utf8/g\ns/\\xc3\\xa2\\xe2\\x82\\xac\\xe2\\x84\\xa2/\\&amp;rsquo;/g\ns/\\xc3\\xa2\\xe2\\x82\\xac\\xe2\\x80\\x9d/\\&amp;mdash;/g\ns/\\xE2\\x80\\x9C/\\&amp;ndash;/g\ns/\\xc3\\xa2\\xe2\\x82\\xac\\xc2\\xa2/\\&amp;bull;/g\ns/\\xC3\\xA2\\xE2\\x82\\xAC\\xC5\\x93/\\&amp;ldquo;/g\ns/\\xC3\\xA2\\xE2\\x82\\xAC\\xC2\\x9D/\\&amp;rdquo;/g\ns/\\xC3\\xA2\\xE2\\x82\\xAC\\xC2\\x9C/\\&amp;lsquo;/g\ns/\\xC3\\xA2\\xE2\\x82\\xAC/\\&amp;rdquo;/g\ns/\\xC3\\x85\\xE2\\x80\\x99/\\&amp;lsquo;/g\ns/\\xc3\\x82\\xc2\\xba/\\&amp;deg;/g\ns/\\xC3\\x82\\xC2\\xA9/\\&amp;copy;/g\ns/\\xc3\\xa2\\xC2\\xA6/\\&amp;hellip;/g\ns/\\xC3\\x82\\xC2\\xA3/\\&amp;pound;/g\ns/\\xC3\\x83\\xC2\\xA3/\\&amp;aacute;/g\ns/\\xc3\\x83\\xc2\\xa1/\\&amp;aacute;/g\ns/\\xC3\\x83\\xC2\\xA8/\\&amp;egrave;/g\ns/\\xC3\\x83\\xC2\\xA9/\\&amp;eacute;/g\ns/\\xC3\\x83\\xC2\\xA7/\\&amp;ccedil;/g\ns/\\xc3\\x82\\xc2\\xae/\\&amp;reg;/g\ns/\\xc3\\x83\\xc2\\x81/\\&amp;Aacute;/g\ns/\\xc3\\x83\\xc2\\xab/\\&amp;euml;/g\ns/\\xc3\\x82\\xc2\\xbd/\\&amp;frac12;/g\ns/\\xc3\\x82\\xc2\\xbc/\\&amp;frac14;/g\ns/\\xc3\\xa2\\xe2\\x80\\x9e\\xc2\\xa2/\\&amp;trade;/g\ns/\\xc2\\xbf//g\ns/\\xc2\\xa0/\\&amp;nbsp;/g\ns/\\xc3\\x82\\xc2\\xb9/\\&amp;#185;/g\ns/\\xc3\\x82\\xc2\\xb0/\\&amp;deg;/g\ns/\\xc3\\x82\\xc2\\xab/\\&amp;laquo;/g\ns/\\xc3\\x83\\xc2\\xb6/\\&amp;ouml;/g\n</pre>\n\nThis removes all but 30 of my invalid characters, and those remaining ones appear to be pretty much broke (viewing the original articles shows garbage, and there is no logical character that would fit in those places).  Good enough.','painful_sed_script_of_wordpress_doom','','2007-11-29 19:58:27'),(25,'Creating and modifying BibTeX styles','<a href=\"http://en.wikipedia.org/wiki/BibTeX\">BibTeX</a> is an indispensable tool when you plan to manage a large document or will use the same references again in the future.\n\nHowever, creating and modifying style files for it is extremely difficult.  It\'s in a strange postfix language, almost, but not quite, completely different from <a href=\"http://en.wikipedia.org/wiki/PostScript\">PostScript</a>.  Should you ever have to do this, I recommend reading the BibTeX documentation (especially <code>btxhak</code>) found on <a href=\"http://www.tex.ac.uk/tex-archive/biblio/bibtex/distribs/doc/\">here</a> on CTAN.\n\nWhat this document doesn\'t tell you is how most style files actually work.  There is an important thing you need to know when modifying the standard style files: at the beginning of a style FUNCTION, you normally have two literals on your stack, which are the the last two strings of your bibliography entry that have been entered at this point.  For example, if you are modifying the title style function, the first thing you would pop out would be the title, and the second thing would probably be the author.\n\nWhen modifying a style function, you need to do two things: <code>write$</code> the previous string with appropriate punctuation afterwards, leave the current string on the top of the stack, and update the state (usually in a variable like <code>output.state</code>) so that the next style function will know where it is in the entry.\n\nAs a quick example, I needed to add a parenthesis to a particular section of my bibliographic entries to comply with a style guide.  So I created the following function to set up the opening paren:\n\n<pre>\nFUNCTION {output.apunc}\n{\n  swap$\n  \" \" * write$\n  before.all \'output.state :=\n}\n</pre>\n\nThis simply takes the two parts of the stack, swaps them (so that we are now working with the previously output word), adds a space after it (with the <code>*</code> concatenation operation), and writes it.  It then sets the current state toe mean that we are at the beginning of a new \"sentence\".  You would call this function with\n\n<pre>\n\"(\" output.apunc\n</pre>\n\nIn case you are curious, words between double quotes are string, words that end in a <code>$</code> are calling one of the few dozen built-in functions, words that start with a single quote indicate that you are passing the variable name, and anything else is either a function call or inserts the value of that variable on the stack.  This is why the first argument of the assignment operator needs to be single-quoted, so that the interpreter doesn\'t simply insert the value of the variable.','creating_and_modifying_bibtex_styles','','2007-12-02 16:27:50'),(26,'“Science of Board Games” up and running','I have launched a new blog, <a href=\"http://www.scienceofboardgames.com\">Science of Board Games</a>.  Basically, musings on board games, particularly related to computer science, simulations, and mathematics.  I wrote a quick entry on Scrabble words, and I have another entry on dice coming up soon.\n\nWe\'ll see how it goes.','science_of_board_games_up_and_running','','2007-12-08 23:32:43'),(27,'More Ruby Woes','I have been giving Ruby the old college try.  I was running into some strange difficulties with a minimax function in Ruby that at first I thought were more scoping oddities.\n\nIt turns out that the <code>clone</code> and <code>dup</code> operators on Arrays in Ruby only perform shallow copying, which will pretty much not work on multidimensional arrays.  Oh well, I guess I would have to write my own, or copy someone else\'s, right?  Maybe something like:\n\n<pre lang=\"ruby\">def deepcopy(x)\n  if x.kind_of? Array\n    copy = []\n    x.each { |y|  copy += [deepcopy(y)] }\n    return copy\n  else\n    return x.dup\n  end\nend</pre>\n\n<strong>Wrong</strong>.  Ruby\'s almost-but-not-quite pure-OO nature actually makes it nearly impossible to create a generic deep copy function.  The problem is that integers, floats, and so forth are not the complete objects we thought they were, because you can\'t <code>dup</code> them:\n\n<pre>>> x = 1.dup\nTypeError: can\'t dup Fixnum\n	from (irb):1:in `dup\'\n	from (irb):1</pre>\n\nSo much for pure OO.\n\nThe best solution I could come up with for a two-deep copy is (knowing ahead of time that it is a matrix):\n\n<pre lang=\"ruby\">def copy2(b)\n	newb = []\n	b.each { |r|  newb += [r.dup] }\n	return newb\nend</pre>\n\nThis, along with the odd scoping rules and counter-intuitive syntax are making me seriously consider ending my Ruby experiment.  And I so wanted to love Ruby.','more_ruby_woes','16 7','2007-12-26 14:36:39'),(29,'Learning Rails','Since I have been learning Ruby lately, I thought it might be fun to pick up Rails.  Normally, while doing this, I would be inclined to search around the Internet for some tutorials and documentation, and start digging in.\n\nHowever, I was not able to find any acceptable tutorials on the Internet.  I mean, sure, I found a ton of \"Build your own blog\" kind of tutorials, but Rails typically just needs more of an explanation, from what I could get.  Sure, the tutorial might tell me to insert a line into <code>004_add_stuff.rb</code> and run <code>rake migrate</code> (more properly, as I have learned, <code>rake db:migrate</code>), but what the hell does that mean?  And so on.\n\nAnother problem is that Rails 2.0 appears to be just broken, everywhere.  It came out less a month ago, and I cannot get critical parts of it working properly on any box I am running (OS X and Linux).  But that doesn\'t matter, because there\'s no decent (see previous paragraph) tutorials on it.\n\n<a href=\"http://www.amazon.com/gp/product/0977616630?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0977616630\"><img class=\"alignright\" border=\"0\" src=\"http://www.caswenson.com/wp-content/uploads/2007/12/21br22k8svl_aa_sl160_.jpg\"></a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0977616630\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />So, my current solution is to use my Gentoo Linux box (which currently only supports Rails 1.2, since it also sees 2.0 as totally broken), and I bought <a href=\"http://www.amazon.com/gp/product/0977616630?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0977616630\">Agile Web Development with Rails</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0977616630\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />.  Looking through all of the book options, this one best suited what I wanted.  It\'s a bit chatty, but that can be good, since Rails does an awful lot of complicated stuff without you knowing, but you have to know in order to change any of it.\n\nThe biggest issue is that the book does not cover Rails 2.0, and came out slightly before Rails 1.2, even though it is only about a year old!  I don\'t hold that against the book, especially since I can only seem to get the older Rails to work on my boxes.\n\nIn a nutshell: having the book is about a billion times better than not having one.  Though I may still give up on this whole Ruby thing and switch to Python and Pylons at some point.','learning_rails','15 16 7','2007-12-29 10:29:25'),(30,'Flash and Hosting','I am considering spending some time to properly learn Flash CS3 and ActionScript, in order to write a game, possibly based on an old BBS game I was very fond of, called <a href=\"http://en.wikipedia.org/wiki/Lords_of_Cyberspace\">Lords of Cyberspace</a> (some more info available at <a href=\"http://everything2.com/index.pl?node_id=1687694\">Everything2</a>).  For some reason, I seem to be the only person that cares about the game, as evidenced by the fact that I wrote both of those articles on it.\n\nI was able to get the actual game working on a demo copy of MajorBBS running under <a href=\"http://www.dosbox.com/\">DOSbox</a> on my MacBook Pro.  (BTW, DOSbox is an amazing product that allows you play classic MS-DOS games under OS X.)\n\nIn addition to that, <a href=\"http://www.thursdaybram.com\">Thursday</a> and I have come up with a possible idea for a web-based service.  The site will probably be created in something like Ruby on Rails, Django, <a href=\"http://webpy.org/\">web.py</a>, or whatever technology comes across tomorrow, and it may require a bit of bandwidth (enough to worry about bandwidth allotments less than 100GB a month).\n\nI have had a hard time finding a hosting service that makes me happy.  Here\'s what I would like:\n\n<ul>\n<li><b>Cheap.</b> Obviously, as inexpensive as I can get away with.  Especially since it will likely be months before this is actually out of testing and we start selling the service.</li>\n<li><b>Full RoR/Django/bleeding edge whatever support.</b> Self-explanatory.</li>\n<li><b>Shell access.</b> I don\'t understand how some providers can have Ruby on Rails support but without shell access but some do (like GoDaddy, who hosts this blog).</li>\n<li><b>100+GB per month transfer.</b>  But I would like to be able to easily upgrade this by a few times before moving to dedicated hosting (ha).  Storage to go along with that is also necessary.</li>\n</ul>\n\nStorage isn\'t a bit less of a concern, the more I think about it, because I can always use something like <a href=\"http://aws.amazon.com/s3\">Amazon S3</a> (and this may alleviate some bandwidth concerns as well), which is pretty reasonable.\n\nSo far, I like <a href=\"http://hostingwizard.com/site5/\">Site5</a> (but feels almost too good to be true) and <a href=\"http://www.crucialp.com/web-hosting/\">Crucial Paradigm</a> (despite their dumb name, but their plans don\'t have the most storage or space, though S3 might alleviate some of this, and they look like they know what they are doing).\n\nAnybody have any experience, good or bad, with hosting providers that provide web services support?','flash_and_hosting','13 17','2008-01-12 15:42:47'),(33,'Cover for Modern Cryptanalysis up!','<p style=\"text-align: center\"><a href=\"http://www.amazon.com/gp/product/047013593X?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=047013593X\"><img border=\"0\" src=\"http://www.caswenson.com/wp-content/uploads/2008/01/21tcdykwdkl_aa_sl160_.jpg\"></a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=047013593X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /></p>\n\nThe cover for my book, <a href=\"http://www.amazon.com/gp/product/047013593X?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=047013593X\">Modern Cryptanalysis</a>, has been finished!\n\nThe release date is currently set for March 17, 2008, and we seem to be doing things on schedule to get it there.  I just finished looking through (I believe) my last set of proofs.<em></em>','cover_for_modern_cryptanalysis_up','','2008-01-26 22:04:45'),(34,'Another Dissertation','So, I\'ve been working on my dissertation again, after getting my <em>Mathematica</em> 6 working again.  Since I have to process a lot of raw radio samples, I think I am going to continue developing some of my models there, where I can easily change things and <a href=\"http://demonstrations.wolfram.com/\">see results</a> fast, before I start porting it over to C and Python for speed (well, at least speedy in the C parts).\n\nI definitely have some interesting theories for this, so we\'ll see how it turns out, and hopefully I can get some more results into my dissertation and get it churned out in time for May so that I can finally graduate.\n\nI also have a slew of other projects in the works, including two websites: a fun one that I hope to deploy as a Facebook application (which it turns out is ridiculously easy with RoR), and a potential one that can generate income!  The income-generating one is actually mostly coded, I just need to CSS it up, bulletproof it, and implement a few more shiny features.\n\nThese, of course, aren\'t helping me get my dissertation done anytime soon.','another_dissertation','','2008-01-30 18:16:50'),(36,'Essential Library for Science Writers','As I have been writing my book, I thought to give a list of what books are most helpful to me while writing.  I try to limit the books to be general purpose, in that they can apply to non-science writers, and to non-book writing, when possible.\n<ul>\n	<li><a href=\"http://www.amazon.com/gp/product/0226104036?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0226104036\">The Chicago Manual of Style</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0226104036\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> &mdash; This is <em>the</em> book for style guidance in general.</li>\n	<li><a href=\"http://www.amazon.com/gp/product/0201134470?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0201134470\">The TeXbook</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0201134470\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> by Donald Knuth &mdash; I write in LaTeX, so it naturally helps, but it also presents a strong low-level view of typesetting a book that can be very informative.</li>\n	<li><a href=\"http://www.amazon.com/gp/product/0881792063?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0881792063\">The Elements of Typographic Style</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0881792063\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> by Robert Bringhurst &mdash; beautiful book about the beautiful topic of typography.  Very nice book on design, fonts, and many other aspects.</li>\n	<li><a href=\"http://www.amazon.com/gp/product/0596527330?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0596527330\">CSS: The Definitive Guide</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0596527330\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> by Eric A. Meyer &mdash; If you are designing content for the web, this book is a must.</li>\n	<li><a href=\"http://www.amazon.com/gp/product/088385063X?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=088385063X\">Mathematical Writing</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=088385063X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> by Donald Knuth &mdash; A good overall book on writing science and mathematics.  It\'s getting harder to find, though, but most of the text is available <a href=\"http://tex.loria.fr/typographie/mathwriting.pdf\">online for free</a>.</li>\n	<li><a href=\"http://www.amazon.com/gp/product/046500489X?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=046500489X\">The Associated Press Stylebook on Briefing on Media Law</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=046500489X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> &mdash; If you are writing an article for many online and print media outlets, knowing the AP style manual is a must.  The alphabetical organization of this helps find topics fast, but doesn\'t make for very good topical reading (like <em>Chicago</em> does).\n</ul>\n\nAlthough not a book, <a href=\"http://grammar.quickanddirtytips.com/\">Grammar Girl</a> puts out a podcast that provides many useful tips for writers and editors, to help keep you on your grammatical toes.\n\nLast, but not least, you can just pick up a book that you like and see how it states things.  Older books (say, 1960s and before) are often better, since a lot more care often went into their making, but a good solid book by a competent publisher today can also be good, in many cases.  Many publishing houses will also post their style manuals and guides on the web for authors to take a look at.','essential_library_for_science_writers','','2008-02-06 22:42:03'),(39,'Mac OS X Python','<a href=\'http://www.caswenson.com/wp-content/uploads/2008/02/python.png\' title=\'Python Logo\'><img class=\"alignright\" src=\'http://www.caswenson.com/wp-content/uploads/2008/02/python.png\' alt=\'Python Logo\' /></a>\n\nPython on Mac OS X is poorly designed and all sorts of unfun to fix.  Certain packages work better with the built-in Python, certain work better with fink/ports/portage Python.  However, wxPython only works with the built-in one, since it integrates with Aqua, so I decided to switch everything over to using only the built-in version.\n\nHere is what you need to do to get up to speed:\n<ol>\n	<li><a href=\"http://www.python.org/download/\">Update</a> to the latest Python for OS X.</li>\n	<li>If you are running on an Intel processor on OS X 10.5 Leopard, <a href=\"http://www.oreillynet.com/onlamp/blog/2007/12/pil_on_leopard_or_how_i_made_p.html\">fix</a> (really, unbreak) your Python core Makefile to drop PPC support, since it breaks things like PIL.  (The link just stays to remove all <code>-arch ppc</code>\'s from <code>/Library/&zwnj;Frameworks/&zwnj;Python.framework/&zwnj;Versions/&zwnj;Current/&zwnj;lib/&zwnj;python2.5/&zwnj;config/&zwnj;Makefile</code></li>\n	<li>Install everything either with Framework packages (wxPython), or by manually building via <code>sudo python setup.py install</code>.</li></ol>\n\nFor my work, the core packages are <a href=\"http://www.wxpython.org/download.php\">wxPython</a>, <a href=\"http://www.scipy.org/Download\">numpy + scipy</a>, <a href=\"http://sourceforge.net/projects/matplotlib\">matplotlib</a>, and the <a href=\"http://www.pythonware.com/products/pil/\">Python Imaging Library</a>.  I\'ve successfully installed them all now using the above method, but note that numpy and scipy will not install via the OS X package, but have to be compiled from source.','mac_os_x_python','','2008-02-19 22:11:35'),(41,'Python + gnuplot = gnuplot-py','<a href=\'http://www.caswenson.com/wp-content/uploads/2008/02/gnuplot-py.png\' title=\'Image from gnuplot\'><img class=\"alignright\" src=\'http://www.caswenson.com/wp-content/uploads/2008/02/gnuplot-py.thumbnail.png\' alt=\'Image from gnuplot\' /></a>\n\nI recently discovered a fairly old (last updated in 2003), but still functional package for Python that provides nifty integration with <a href=\"http://www.gnuplot.info\">gnuplot</a> called <a href=\"http://gnuplot-py.sourceforge.net/\">gnuplot-py</a>.\n\nFor those of you unfamiliar with gnuplot, it is a simple, powerful, and free graphing program.  It\'s very slick, but sometimes a bit annoying to use if you are, say, generating your data in Python.  Normally, this would require you to produce your output to a file, and then run gnuplot as a separate program, and finally load and plot your file.  It can be tediously annoying at times.\n\nEnter gnuplot-py.  Basically, it provides a few simple wrappers to gnuplot allowing you to control it from Python, and it can easily plot Python data structures.\n\nThe basic usage of this is demonstrated in the following ultra-basic Python program:\n\n<pre lang=\"python\"># basic declarations and setup\nimport Gnuplot, Gnuplot.funcutils\ngplot = Gnuplot.Gnuplot(debug = 1)\ngplot.title(\"Test\")\ngplot(\"set data style linespoints\")\n\ndata = [1.0, 0.0, 1.0]  # the data to plot\n\ngplot.plot(data) # plot the data</pre>\n\nIn OS X, this probably pulls up an AquaTerm window that displays the data plotted.  Simple, nay?\n\nThe hardest part of using it is the fact that the Python \"Numeric\" package is now called numpy.  To fix this, download <a href=\"http://mirrors.usc.edu/pub/linux/distributions/gentoo/dev-python/gnuplot-py/files/gnuplot-py-1.7-numpy.patch\">this patch file</a> and run it against the sources you download (usually with <code>patch -p1 < gnuplot-py-1.7-numpy.patch</code>, if run from within the source directory itself).','python_gnuplot_gnuplotpy','12 14','2008-02-22 11:55:18'),(13,'curl + twitter + crontab = Happiness','I\'ve always wanted to know how my servers are doing.  I don\'t have time to check on every single one of them all of the time.  In the past, this meant perhaps an automatic email sent to me at some specified time during the day.\n\nBut emails are annoying.  RSS is definitely the technology that would be nice, but how to implement it?\n\n<a href=\"http://www.twitter.com/\">Twitter</a> is ideal for this purpose.  Multiple people (admins?) can check the status of a server as it is updated, and you can lock it down so that only authorized people can view the status.\n\nUpdating is easy using the Twitter API through <a href=\"http://www.sakana.fr/blog/2007/03/18/scripting-twitter-with-curl/\">curl</a>.  I just wrote the following bash script to update a twitter feed for a specified user:\n\n<pre lang=\"bash\">#!/bin/bash\n\nUSER=\"server\"\nPASS=\"password\"\nURL=\"http://twitter.com/statuses/update.xml\"\nSTATUS=\"[`hostname`] `uptime`, `df -h / | grep -o -e \'[0-9][0-9]*%\'` HD used\"\n\ncurl --basic --user $USER:$PASS --data status=\"$STATUS\" $URL</pre>\n\nThis automatically sends updates that look like:\n<pre>[servname] 11:23:20 up 7 days, 14:43, 1 user, load average: 0.18, 0.36, 0.17, 83% HD used</pre>\n\nThen I name it something useful, like <code>/root/twitter.sh</code>, and add a <a href=\"http://en.wikipedia.org/wiki/Cron\">crontab</a> entry:\n\n<pre>0 0 * * * /root/twitter.sh >& /dev/null</pre>\n\nAnd I\'m set.\n\nNaturally, this was designed to work for Linux, and would probably work on OS X and Windows/<a href=\"http://en.wikipedia.org/wiki/Cygwin\">Cygwin</a> as well.','curl_twitter_crontab_happiness','10 11 18','2008-03-22 10:32:37'),(42,'Switch to Bluehost','I recently switched over this blog, and soon the rest of my sites, to <a href=\"http://www.bluehost.com\" title=\"Bluehost\">Bluehost</a>.  They seem to support all of the features I need (RoR, PHP, shell access, multiple domains, decent bandwidth and storage) for a reasonable price.  It\'s not virtual dedicated, but it\'s not priced like virtual dedicated either.\n\nSo far, I am liking it quite a bit, though I have not played around with the Rails bits yet, though I will quite soon, as several of my current projects use it.','switch_to_bluehost','','2008-03-24 17:23:18'),(45,'PostScript and PDF fun','I never noticed it before, but many of the resources that I either own or would love to own regarding PDF, PostScript, MetaPost, etc., are all available for free online!\n\n<ul>\n	<li><a href=\"http://www.math.ubc.ca/~cass/graphics/manual/index.html\">Mathematical Illustrations: A manual of geometry and PostScript</a> by Bill Casselman</li>\n	<li><a href=\"http://partners.adobe.com/public/developer/ps/index_specs.html\">PostScript specifications</a> from Adobe</li>\n	<li><a href=\"http://www.adobe.com/devnet/pdf/pdf_reference.html\">PDF specifications</a> from Adobe</li>\n	<li><a href=\"http://tug.ctan.org/tex-archive/info/examples/lgc2/\">The source code</a> from <a href=\"http://www.amazon.com/gp/product/0321508920?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=9325&creativeASIN=0321508920\">The LaTeX Graphics Companion (2nd Edition)</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0321508920\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> by Michel Goossens, Frank Mittelbach, Sebastian Rahtz, Denis Roegel, Herbert Voss.</li>\n</ul>\n\nEnjoy!  I know I will.','postscript_and_pdf_fun','latex math metapost pdf postscript typesetting','2008-04-16 20:33:44'),(47,'Some things about FiOS you don\'t know','I have been a pretty big fan of <a href=\"http://en.wikipedia.org/wiki/Verizon_FiOS\">Verizon FiOS</a> ever since I got it last August.  The Internet has not ever gone down that I can recall, TV quality is excellent, and it\'s competitvely priced.\n\nHowever, there are a few things that you probably don\'t know about FiOS, as I didn\'t until I spent a couple of hours of my evening playing around and on the phone with tech support.\n\n<strong>That Ethernet port on your FiOS box? It doesn\'t work.</strong> Your ONT (the boxy thing that provides the FiOS magic) has a multitude of ports: incoming fiber, and outgoing coax, two phone ports, and an Ethernet port.  It is not possible to use both the coax and the Ethernet port at the same time.\n\n<strong>FiOS TV gets its listing and on-demand setting from the Internet.</strong> This has some interesting implications.  I am really curious how this works if you have FiOS TV, but not the Internet plan?\n\n<strong>FiOS TV requires the coax port.</strong>  Well, duh, right?.  But, when combined with the previous notes, that means that, <strong>if you have FiOS TV service, you cannot use the Ethernet port</strong>.\n\n<strong>FiOS uses bandwidth on that coax cable from 1 to 1150 MHz.</strong>  According to my router, it uses somee range under 1000 MHz for Internet service, and 1001 through 1150 MHz for communicating with FiOS TV.  Note that a lot of cable splitters only go through 900 MHz, so be careful if you start using your own.\n\nOnly about half of the tech support guys were helpful when I called (one did not know several of these points when trying to diagnose what my problem was), so watch out if you need to call.','some_things_about_fios_you_dont_know','fios','2008-04-18 22:06:07'),(49,'Hacked my former Vonage\'s D-Link VTA-VD','<a href=\'http://www.caswenson.com/wp-content/uploads/2008/04/picture-2.png\'><img class=\"alignright\" src=\"http://www.caswenson.com/wp-content/uploads/2008/04/picture-2-300x282.png\" alt=\"\" title=\"D-Link VTA Success\" width=\"300\" height=\"282\" class=\"alignnone size-medium wp-image-48\" /></a>I finally successfully hacked my D-Link VTA-VD (Vonage Terminal Adapter) 1.00.09 firmware to work with an arbitrary SIP server.  (Although I\'ve kept it at the 1.00.07 firmware once I successfully downgraded).\n\nI relied heavily on these <a href=\"http://www.dslreports.com/forum/remark,16748441\">two</a> <a href=\"http://www.dslreports.com/forum/remark,19774802?hilite=\">posts</a>.  I definitely would have had a hard time doing it without them.\n\nFirst, you can just hope that your D-Link has the Support account unlocked.  Usually, the password will either be blank, or it will be \"tivonpw\", and the user name is \"Support\".\n\nIf that doesn\'t work, you can try the URL trick: login as \"user\" (usually the password is \"user\"), and then send it a URL of the form\n\n<code>http://192.168.0.2/cgi-bin/webcm?getpage=/usr/www_safe/html/home/home_system.htmvar:OldProvisioned=on&=&var:OldUnProvisioned=on&=&var:isFirstTime=no</code>\n\nwhere you change the IP address, and alternate between \"on\" and \"off\" for the \"OldProvisioned\" setting in the URL.  Eventually, you should get both the \"Provisioned\" and \"Non-Provisioned\" reset check boxes checked.  Once you do, tell it to do a factory reset.  Hopefully that will work.  (It may take several tries, as well as a hardware reset or two (by pressing the reset button).)\n\nThat didn\'t work for me.  If that doesn\'t for you as well, you are in for a bit of work.  You will need a DHCP server, a DNS server, a TFTP server, and <a href=\"http://www.wireshark.org/\">Wireshark</a>.  I have OS X, so I used <a href=\"http://www.finkproject.org/\">Fink</a> to install a DHCP server (called \"dhcp\") (rather than futz with OS X\'s built-in one) and the DNS server (I used BIND, listed under \"bind9\").  So, first, set up your DHCP server with a nice  subnet like (in <code>/sw/etc/dhcpd.conf</code>):\n\n<pre>subnet 192.168.0.0 netmask 255.255.255.0 {\n  range 192.168.0.2 192.168.0.2;\n  server-name \"192.168.0.101\";\n  option routers 192.168.0.101;\n  option domain-name-servers 192.168.0.101;\n}</pre>\n\nWhere 192.168.0.101 is the IP address of your box, 192.168.0.2 is the address of your VTA that you would like to hack.  If it complains when you start it up about some file being missing, just run <code>sudo touch /var/db/dhcpd.leases</code>.\n\nNow you need a DNS zone.  If you are on OS X, just drop this line into your <code>/sw/etc/named.conf</code>:\n\n<pre>zone \"vonage.net\" {\n    type master;\n    file \"/sw/etc/named.vonage\";\n    notify no;\n};</pre>\n\nAnd then create a file <code>/sw/etc/named.vonage</code> with the following junk in it (again, the 192.168.0.101 should be your server)</code>:\n\n<pre>$TTL    604800\n@   IN  SOA vonage.net. root.vonage.net. (\n                  1     ; Serial\n             604800     ; Refresh\n              86400     ; Retry\n            2419200     ; Expire\n             604800 )   ; Negative Cache TTL\n@   IN  NS  ti.tftp.vonage.net.\nti.tftp.vonage.net.      3600000      A     192.168.0.101</pre>\n\nWhile you are at the command-line, go ahead and launch the built-in TFTP server with the command <code>sudo launchctl load -F /System/Library/LaunchDaemons/tftp.plist</code>.  You can unload it later with <code>sudo launchctl unload /System/Library/LaunchDaemons/tftp.plist</code>.  The TFTP folder is in <code>/private/tftpboot</code>.\n\nYou have Wireshark installed by now, right?  Good.  Now, plug that router into your machine (not connected to the Internet), and sniff all of the traffic using Wireshark.  After about a minute or so, you should see a TFTP request come in for a file called at ti.tftp.vonage.net at \"/adsfadf/ti00179A------.xml\", where the junk at the beginning is some random junk, and the \"00179A------\" is your MAC address.\n\nNow, go out on the Internet, and grab that XML file from Vonage at <code>http://httpconfig.vonage.net/adsfadf/ti00179A------.xml</code> (again, replacing where necessary), and upload the XML file to that same folder under <code>/private/tftpboot</code> on your server.  Don\'t bother trying to read it... it\'s apparently encrypted with RC4 (and you can recover the key later).  Now the VTA will either find the file on its own, or you may just reboot it again and it will search for the file and find it on your \"Vonage\" TFTP server.\n\nHa-ha!  Now you should be able to login as \"Support\" (either no password or \"tivonpw\" as your password, again).\n\nNow, you need to get a copy of the <a href=\"http://httpconfig.vonage.net/VTA-11.4.0-r060331-1.00.07-r060418.img\">1.00.07 firmware</a> to downgrade.  Login to your box with the Support account and upload it!\n\nNow, it does have two firmware slots, and it seems to have a tendency to boot up into the 1.00.09 firmware for no reason, so if that happens, upload the 1.00.07 firmware again.\n\nOkay, home stretch.  Configure it with a static IP (trust me... it\'s easier).  Now find a Windows box (ugh) and get the beta copy of <a href=\"http://www.bargainshare.com/index.php?showtopic=87504\">CYT 4.6</a> (I couldn\'t get the stable one to work, at least).  Open up the program from the command-line with \"DLINK\" as a command-line parameter (like, <code>cyt46.exe DLINK</code>).  Set the IP address of your device (option 3), and then go to option 1 to reset the password and start an XML provisioning server.\n\nI\'m not sure what all kind of magic is going on here, but something is.  (I also had my Windows box as the DNS and default gateway, too, which may or may not have helped.)  Eventually (after about a minute or so), it should report success.  I had to reset it and do this again for it to take.\n\nAnd after that, you should be able to configure the device for an arbitrary SIP server by logging in with the Admin account (\"Admin\" is the default password, case-sensitive).','hacked_my_former_vonages_dlink_vtavd','voip','2008-04-29 21:41:49'),(50,'Some scipy stuff','It\'s been quiet here lately.  I\'ve had a lot of projects going on that occupy most of my time in the evenings and on weekends.\r\n\r\nOne of these is a new blog I will be writing for, so expect news of that in the next few days.  I\'ve been putting together a chapter for a book, working on my dissertation, working on new web sites, and a whole slew of other activities.\r\n\r\nOnce some of this stuff starts taking off (and out of my plate), I will have more time to post.\r\n\r\n<hr />\r\n\r\nSo, I want this post to have some meat.  Well, one of the things that has been occupying my time lately has been programming things for my dissertation, particularly in Python using <a href=\"http://www.scipy.org/\">scipy</a>.\r\n\r\nScipy is great.  What is not so great about it is two-fold: everyone else uses MATLAB (or the free alternative, <a href=\"http://www.gnu.org/software/octave/\">GNU Octave</a>), and there is practically no documentation on scipy.  Scipy has a bunch of packages that emulate various toolboxes from MATLAB, but what makes matters worse is that sometimes it doesn\'t implement all of a package, or it implements it strangely.\r\n\r\nHow so?  Well, MATLAB doesn\'t differentiate between a 1x1 matrix and a number, and you can use them interchangeably.  Scipy is much more strictly typed, and you can\'t just mix and match.  Nor can you mix and match complex numbers, reals, etc.  Also, MATLAB numbers all lists, matrices, etc., starting with 1, and scipy use\'s Python\'s conventions of starting with 0.  This makes a lot of MATLAB example code you for something you are doing annoying to port over to scipy.\r\n\r\nOne great resource for this is <a href=\"http://www.scipy.org/NumPy_for_Matlab_Users\">NumPy for Matlab Users</a>.  Not only does this tell you how to convert many common MATLAB operations to scipy, but it gives you an idea of what you <em>can</em> do with scipy.\r\n\r\nBoth tools are excellent, if a little difficult to get working on Mac OS X.\r\n\r\n<hr />\r\n\r\nA quick tip for MATLAB users: MATLAB has a great function for <a href=\"http://en.wikipedia.org/wiki/Cross-correlation\">cross correlation</a>, called <code>xcorr</code>.  The scipy.signal package includes a function, <code>correlate</code>, that is almost, but not quite, completely incompatible with the <code>xcorr</code> function.  So, I reimplemented the MATLAB <code>xcorr</code> in Python, as follows:\r\n\r\n<pre name=\"code\" class=\"python\">\r\ndef matlab_xcorr(x, yy = None):\r\n  # if no y, compute the autocorrelation of x\r\n  y = yy\r\n  if y == None:\r\n    y = x\r\n \r\n  n = len(x)\r\n  c = zeros(2 * n - 1, complex)\r\n  for m in range(1, 2 * n):\r\n    c[m - 1] = cxy(x, y, m - n)\r\n \r\n  return c\r\n</pre>\r\n\r\nHopefully someone might find this useful, if they are suddenly frustrated by the lack of <code>xcorr</code> in scipy.\r\n\r\nBTW, I recently switched to writing Python code <a href=\"http://panela.blog-city.com/python_at_google_greg_stein__sdforum.htm\">Google-style</a>, and have never looked back.','some_scipy_stuff','matlab programming python scipy','2008-06-05 20:57:00'),(52,'Word to PDF: Duh!','I don\'t know about you, but I really despise Word files.  I hate dealing with them: they are bulky and slow, and full of potential problems.  Even with Office 2008 for my Mac, they are a pain.\n\nPDFs on my Mac are, however, pretty nice.  As long as they can be loaded with the OS X\'s Preview application (99.9% of the time), they are snappy and quick to search.  I have fallen back in love with PDFs on my Mac.\n\nWhy back in love?  Well, in Windows, PDFs were a pain-in-the-ass.  Acrobat was slow, would crash my browser, and just looked so unnatural.  I understand there are alternative readers out there now (like Foxit) that solve some of these problems in Windows.  In OS X, there\'s Preview.  They aren\'t so bad anymore.  I recall that someone once said that PDFs are the land mines of the WWW (due to the shouts of \"Nooooo!!!!!\" when you accidentally click one and have to load Acrobat).\n\nSo, a big \"duh\" moment came for me a few months ago when I realized that taking huge, complex documents that were written in Word (and some HTML documents) and printing them to PDF would save me so much hassle and pain.  (For example, the <a href=\"http://www.3gpp.org/\">3GPP</a> publishes all of their documents in Word.)    I must say that it makes it so much easier to keep more of the documents open, easier to browse them, and I don\'t have to worry about accidentally modifying them while they are open.\n\nWord 2008 is even nice enough to let you save directly to a PDF in the \"Save As\" dialog.  This appears to be just a shortcut to OS X\'s built-in Print to PDF ability, but it saves a few clicks.\n\nIt\'s noteworthy that, for some documents, I might still have to open up things in Acrobat.  My taxes, for example, have to be done with real Acrobat, since the text boxes were not created very well, and break in Preview.  But with Acrobat 8 we have proper subpixel anti-aliasing on the fonts, and it\'s fairly snappy, so it doesn\'t bother me too much.\n\nAcrobat 8 Reader on Windows, though, I\'ve had a lot of trouble with.  Specifically, <a href=\"http://www.winshell.org\">WinShell</a> (my LaTeX editor) will crash it constantly when it notifies it of an update to the PDF created by LaTeX.','word_to_pdf_duh','pdf word','2008-06-15 19:44:41'),(53,'Moore\'s Law: Please come back!  We miss you!','Being a good consumer, every year or two I get the urge to upgrade my PC.  \"Do I need more RAM?  A better CPU?  Well, if I get those I might as well get a new motherboard, and &hellip;\", etc.  I\'m sure many of you are familiar with this drill.\n\nBut, during my last few bouts, I\'ve realized that there is no good reason for me to upgrade.  This doesn\'t make sense!  My current PCs were bought in 2005 and 2006, so should be getting to be ancient by now, right?  I mean, my 1998 PC was a 166 MHz, 32 MB RAM piece of crap, and by the end of 2000 I was screaming along with with a 1 GHz behemoth with 256 MB RAM.  That\'s 600% the raw processing power, and 800% the RAM in <b>TWO</b> years.  Granted, the 1 GHz machine probably cost me an extra order of magnitude, but things were moving fast then.\n\nNow, my 2005 laptop is a first-gen MacBook Pro: 2GB RAM, 2.16 GHz (32-bit).  Three and a half years later, what would I get?  2GB RAM and 2.6 GHz (64-bit).  What?  That\'s an increase of <b>0%</b> for RAM and <b>20%</b> in almost twice the time of my 1998 to 2000 upgrade.\n\nAnd we can stretch that back.  The Intel Core\'s immediate predecessor in the Pentium M series (the successor is the Core 2).  I had a 1.6 GHz Pentium M in my laptop back in 2003.  So, the current top-of-the-line laptop isn\'t even twice the CPU that my laptop was <b>five</b> years ago.  To be fair, the newer ones have two cores, but each of those cores is only 75% faster than five years ago.\n\nWe\'ve fared slightly worse on desktops: my late-2006 PC is a first-gen Mac Pro: 2GB RAM (upgraded to 6 GB now) with 4 &times; 2.66 GHz processors for about $2600.  Today, I\'d get 2GB RAM, and an 8 &times; 2.8 GHz processors for $2800.  An increase of <b>$200</b> (&#8253;), <b>0%</b> RAM, and (theoretically) <b>210%</b> CPU (in reality, the difference is probably more like 10&ndash;20%).\n\nSorry, but I\'m not dropping nearly three thousand bones for something nearly identical to what I bought a couple of years ago.\n\nI guess it will be at least a few more years before I upgrade.\n\nNote that this doesn\'t address video cards: these have gotten ridiculously faster in the last few years.  But I don\'t care as much, since my user experience on my computer is primarily 2D (don\'t play many games.  But, when I do, my older, cheaper GPU can keep up enough to make me happy).','moores_law_please_come_back_we_miss_you','upgrade','2008-06-26 19:41:39'),(71,'HighDefDelight.com','If my writing seems sparse here lately, it\'s because I\'ve been writing a bit more on the <a href=\"http://www.highdefdelight.com/\">High Def Delight</a> blog, an HD-centric blog hosted by b5media.  Check it out.','highdefdelightcom','hd highdefdelight','2008-07-19 13:04:22'),(56,'Greasemonkey Script: Better WordPress Login','A problem I\'ve always had: WordPress blogs transmit passwords in the clear by default.  The only way to remedy this was to break down and buy an SSL certificate for each of your WordPress blogs.\n\nUntil now.\n\nI wrote a simple <a href=\"https://addons.mozilla.org/en-US/firefox/addon/748\">Greasemonkey</a> script for Firefox that secures your password as it is transmitted to any WordPress site.  <a href=\"http://www.caswenson.com/wp-content/uploads/gm/betterloginwp.user.js\">Click here to install it</a> (assuming you are running Firefox and have Greasemonkey installed).  It seems to work with WordPress version 2.4 or better (possibly earlier &hellip; I just haven\'t tested it with them).\n\nNaturally, I had to modify the WordPress change password screen.  Assuming you are logged in, just go ahead and go to change your password to a new secure one.  Notice the \"SECURED\" text that indicates that the script is working its magic.\n\n<a href=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-change-password.png\"><img src=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-change-password-300x111.png\" alt=\"\" title=\"Modified WordPress Change Password\" width=\"300\" height=\"111\" class=\"alignnone size-medium wp-image-64\" /></a>\n\nNow, if you log out, you would normally see this login screen:\n\n<a href=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-login-insecure.png\"><img src=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-login-insecure-300x222.png\" alt=\"Insecure WordPress Login\" title=\"WordPress Login (Normal, Insecure)\" width=\"300\" height=\"222\" class=\"size-medium wp-image-59\" /></a>\n\nHowever, with the new script installed, it should look like this (note the word \"Secure\" has been added to the login button).\n\n<a href=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-login.png\"><img src=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-login-300x220.png\" alt=\"\" title=\"WordPress Login (More Secure)\" width=\"300\" height=\"220\" class=\"alignnone size-medium wp-image-62\" /></a>\n\nAfter you type in your password and click on the \"Secure Login Button\", the script automatically rewrites your password by hashing it (with a salt), which will produce an identical output for an identical input on the same site.  You can see it in action here:\n\n<a href=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-login-replace.png\"><img src=\"http://www.caswenson.com/wp-content/uploads/2008/07/wp-login-replace-300x221.png\" alt=\"\" title=\"WordPress Login (More secure, with replaces password)\" width=\"300\" height=\"221\" class=\"alignnone size-medium wp-image-63\" /></a>\n\nTechnical notes:\n<ul>\n	<li>it replaces your password with a SHA-1 hash of the SHA-1 hash of your password appended with a salt.  Nothing too fancy.</li>\n	<li>The salt is the DNS name of the web server you are connected to.  This way, your password for different sites will have different hashes.\n\nIf you didn\'t do this, and just used a plain hash for your password, then this would not really give you too much security.  For example, if you really think that your password \"secret\" is made more secure by using the MD5 hash of it instead, just do a Google search on the hash (<a href=\"http://www.google.com/search?q=dd02c7c2232759874e1c205587017bed\">dd02c7c2232759874e1c205587017bed</a>) to see how secure your password <b>really</b> is.</li>\n	<li>This is important: <b>you will have to have the script installed on every computer you expect to login with</b>.  The password is permanently changed to be a hash, and if you could still login with the old password, that would be silly.</li>\n	<li>You have to login normally first (Greasemonkey script off) with your old password, and then change the password with the Greasemonkey script turned on.  Then, just leave it on.</li>\n	<li>The script is licensed under the BSD license, so it is easy to adapt to your own purposes.  Feel free to do so.</li>\n	<li>I will also make this into a WordPress plugin if there is a desire for that.  (I actually prefer having it as a Greasemonkey script so that I know that it is working and hasn\'t been changed, but I know some people don\'t want to use Greasemonkey to do this.)</li>\n	<li>A Twitter version is also in testing and cleanup (Twitter does secure your password when you login, but not when you change your password).</li>\n</ul>\n\n\n\n\nIf you like what you see, then <a href=\"http://www.caswenson.com/wp-content/uploads/gm/betterloginwp.user.js\">click here to install the script</a>.\n\n','greasemonkey_script_better_wordpress_login','greasemonkey wordpress','2008-07-23 18:52:49'),(82,'The Call of Cthulhu: Anyone for a free short story?','I decided to finally sit down and read the short story <a href=\"http://en.wikipedia.org/wiki/Call_Of_Cthulhu\">The Call of Cthulhu</a>, by H.P. Lovecraft the other day.  Turns out that it is <a href=\"http://www.aetherial.net/lovecraft/\">pretty much</a> in the public domain (this is actually a matter of some debate, but all the evidence I have found on the Internet seems to point pretty squarely that the copyrights expired long ago).\n\nAnyways, I often wish to read works that were published in print, well, in print.  I found the complete text on <a href=\"http://en.wikisource.org/wiki/The_Call_of_Cthulhu\">Wikipedia</a>, but it feels kind of lifeless.  Something like Lovecraft just <em>feels</em> like it should be in print, you know?\n\nSince I like to think I\'m not completely terrible at typesetting, I typeset it.  At least, I typeset it enough to where the experience of reading it on paper makes me feel like I\'m getting something.  It\'s still somewhat of a minimalist typesetting.\n\nAssuming that the original text is in the public domain, I hereby release the PDF and source of it into the public domain.\n\n<a href=\'http://www.caswenson.com/wp-content/uploads/2008/08/call-of-cthulhu.pdf\'>The Call of Cthulhu</a> (PDF)\n<a href=\'http://www.caswenson.com/wp-content/uploads/2008/08/call-of-cthulhu.indd\'>The Call of Cthulhu</a> (InDesign Source)\n\nFor you people who care about things, the title font is Lucida Blackletter, and the text font is Warnock Pro (one of my favorites) set at 11pt, for that classic feel.  It was set in InDesign CS3 for standard letter paper (14 pages at 8.5 &times; 11&quot;).  It\'s double-column for easier reading.  Nothing fancy.\n\nMaybe there will be more to come in the future?','the_call_of_cthulhu_anyone_for_a_free_short_story','cthulhu indesign pdf typesetting','2008-08-08 21:32:41'),(95,'My best purchase recently: TextMate','<a href=\"http://macromates.com/\">TextMate</a> is one of my favorite companions these days.  It\'s the pinnacle text editing, but unfortunately, only for Mac OS X.\n\nWhat makes it so great?  A few things:<ul>\n	<li><strong>Rock hard stable.</strong>  I\'ve never had it crash.  It\'s responsive.</li>\n	<li><strong>Ridiculously configurable, yet so simple.</strong>  There are tons and tons of plugins and bundles out there do practically whatever you want, to support nearly every language and platform.  If there is something you want that isn\'t out there, you can write it.</li>\n	<li><strong>Directory editing.</strong>  You can open a whole directory in a sidebar, easily getting at any files.  This is enormously useful for most web frameworks, where you have to spider through a hierarchy to get at the various components.</li>\n	<li><strong>Generous licensing.</strong>  The normal single user license allows you to install it on every computer that you use, including even you work computer.  (As long as it is meant for your use.)</li></ul>\n\nWith so much done right (and trust me, there\'s even more), what could possibly be so wrong about it?  Well, two things.  First, it\'s OS X only (though there are some lookalikes available for other platforms).  Second, it\'s a tad pricey, sitting at roughly $59 right now.\n\n(P.S. I\'ve even started to ditch my trusty old <a href=\"http://www.uoregon.edu/~koch/texshop/\">TeXShop</a> in favor of it, due to TeXShop\'s poorer integrated PDF viewer and extreme memory leaks.  (TextMate\'s TeX mode launches it in a full Preview window.))\n\n(P.P.S. Anyone doing serious TeX work should be using OS X anyways: it\'s the only platform that has built-in grammar checking, so you can finally grammar check your TeX!)','my_best_purchase_recently_textmate','os x tex text editor','2008-08-29 14:30:12'),(98,'Laying the \\emph misunderstanding to rest','As a response to <a href=\"http://www.caswenson.com/?p=18\">a previous post</a> regarding LaTeX\'s <code>\\emph</code> command: I was under the impression that you need to still use the <code>\\/</code> command afterward to do an italic correction: it turns out that you do <strong>not</strong> need to.\r\n\r\nI verified this using the wonderul <code>\\showbox</code> command in LaTeX: this spits out the contents of a box, including all characters and kerns.\r\n\r\nNote: in order to use this command in LaTeX, you need to reset the <code>\\showboxdepth</code> and <code>\\showboxbreadth</code> counters, which are reset for some reason.  This can be done like so:\r\n\r\n<pre lang=\"tex\">\\showboxdepth=100\r\n\\showboxbreadth=100</pre>\r\n\r\nThanks to <a href=\"http://uucode.com/blog/2006/02/26/showbox-in-latex/\">Oleg</a> for this tip.\r\n\r\nAfter I did this, I threw the following code in a LaTeX document (it has to be inside of a document, not the preamble, otherwise it won\'t load the fonts properly):\r\n\r\n<pre lang=\"tex\">\\setbox122=\\hbox{{\\it i}i}\r\n\\showbox122\r\n\\setbox123=\\hbox{\\emph{i}i}\r\n\\showbox123</pre>\r\n\r\nThen, checking the log file gave me:\r\n\r\n<pre>> \\box122=\r\n\\hbox(6.67859+0.0)x5.84444\r\n.\\OT1/cmr/m/it/10 i\r\n.\\OT1/cmr/m/n/10 i\r\n \r\n \r\n! OK.\r\nl.7 \\showbox122\r\n               \r\n? \r\n> \\box123=\r\n\\hbox(6.67859+0.0)x6.86339\r\n.\\OT1/cmr/m/it/10 i\r\n.\\kern 1.01895\r\n.\\OT1/cmr/m/n/10 i\r\n \r\n! OK.\r\nl.9 \\showbox123</pre>\r\n\r\nSo, the <code>\\emph</code> command automatically puts in the <code>\\/</code> as necessary.  (I verified that it doesn\'t seem to insert this when it isn\'t needed.)','laying_the_emph_misunderstanding_to_rest','latex tex','2008-09-18 21:24:10'),(104,'Python 2.6? Shows promise, but I can\'t switch yet','Python 2.6 was recently released, with 3.0 coming out soon.  Python 2.6 is meant to be sort of a stepping stone between the trusty old 2.x series and the hot, scary 3.0 series.  So, naturally, I downloaded 2.6 to play with.\r\n\r\nOne of the nicest features has to be true <a href=\"http://docs.python.org/library/multiprocessing.html#module-multiprocessing\">multiprocessing support</a>, allowing you to have multiple processes going, all started from within the same program.  The Python docs even give a <a href=\"http://docs.python.org/whatsnew/2.6.html#pep-371-the-multiprocessing-package\">short example</a> \"demonstrating this\", but it\'s probably the worst example ever.  For one thing, it crashes semi-regularly (Queue implementation problem?), and the <code>time.sleep()</code> in the inner loop makes no sense.\r\n\r\nSo, I had to write my own simple benchmarking program to see if there was much of a difference (adapted from their sample program):<pre name=\"code\" class=\"python\">from multiprocessing import Process\r\n \r\ndef factorial(N):\r\n  fact = 1\r\n  for i in range(1, N+1):\r\n    fact = fact * i\r\n  return fact\r\n \r\nif __name__ == \'__main__\':\r\n  import sys\r\n  if len(sys.argv) > 1 and (sys.argv[1] == \"1\" or sys.argv[1] == \"2\"):\r\n      N = int(sys.argv[1])\r\n  else:\r\n    print \"Expected argument: N (1 for single-threaded, 2 for double-threaded)\"\r\n    sys.exit(1)\r\n \r\n  numbers = range(15000, 15002)\r\n  \r\n  if N == 1:\r\n    factorial(numbers[0])\r\n    factorial(numbers[1])\r\n  else:\r\n    processes = [Process(target=factorial, args=(i,)) for i in numbers]\r\n    for p in processes:\r\n      p.start()\r\n    for p in processes:\r\n      p.join()</pre>\r\nI tested it on my Core Duo (2 × 32-bit cores) on my MacBook Pro, with a single process and two processes, with run times of approximately 0.98 and 0.58 seconds, respectively, for a speedup of about <strong>1.7×</strong>!  Not too shabby at all.  (Single process performance was nearly identical to that under Python 2.5, sadly.)\r\n\r\nNormally, I\'d be installing this on all of my systems, but, alas: <code>scipy</code> does not currently run under 2.6 (it breaks when compiling it).  So, for now, I cannot afford to switch to 2.6.\r\n\r\nFat chance that any of my standard packages will work with Python 3.0, too.','python_26_shows_promise_but_i_cant_switch_yet','programming python','2008-10-21 23:02:43'),(105,'New blog engine','I successfully moved this site from a Wordpress blog to <a href=\"http://github.com/adamwiggins/scanty/\">scanty</a>, with some <a href=\"http://github.com/swenson/scanty/\">modifications</a>.\r\n\r\nI think I have it nearly all working except my old comments.  Rest assured that I have them all (and they are all stored in Disqus), but I haven\'t gotten them all linked properly.\r\n\r\nLet me know if anything is too broken.','new_blog_engine','blog scanty ruby rails sinatra','2008-11-27 20:22:16'),(106,'Python 3.0','There are lots of things I dislike about Python 3.0.  I dislike the removal of the <code>print</code> statement (I would have much preferred allowing Ruby-like function calling without parenthesis, and transparently changing the statement to a function).  I dislike the fact that <code>map</code> and friends return iterators instead of, you know, mapping things.\r\n\r\nAnd why don\'t they include a Mac OS X installer?\r\n\r\nWell, for you Mac OS X users, it\'s still pretty easy to install from source.  Merely download the source, and run a series of commands like so:\r\n\r\n<pre>tar xvjf Python-3.0.tar.bz2\r\ncd Python-3.0\r\n./configure --enable-framework --enable-shared\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\nBe a little careful, though, as it will will overwrite <code>/Library/Frameworks/Python.framework/Versions/Current</code> with 3.0, so you may need to take some measures to use your older versions of Python (though you should hopefully be able to execute them by just calling them with a version number, like <code>python2.5</code>).  YMMV.\r\n\r\n\r\n\r\nAlso, I really hate the name \"Python 3000\".','python_30','python programming','2008-12-13 20:18:34'),(107,'US ZIP Code Data','Recently, I was thinking to myself, \"Where do all of these wonderful sites on the web get information to map cities, towns, and <a href=\"http://en.wikipedia.org/wiki/ZIP_code\">US ZIP codes</a> to actual locations?\"  I then though, \"How much do they pay?\"  In reality, I don\'t know the answer, though there seem to be many companies you can pay for the information.\r\n\r\nThe best data I could find easily was from the <a href=\"http://www.census.gov/geo/www/gazetteer/places2k.html\">US Census</a>, though it is in a terse, fixed-column format.  Clearly then, the next step is to read it into a database.\r\n\r\nSo, naturally, I created a small Ruby script to do just that.  If you are interested in such things, you can view it <a href=\"http://github.com/swenson/rubyzipload\">over at github</a>.\r\n\r\nThe next question I am curious about is calculating the distance between two points on the Earth\'s surface given their latitude and longitude pairs.  This isn\'t <a href=\"http://en.wikipedia.org/wiki/Geographic_coordinate_system\">trivial</a>, but it shouldn\'t be too hard to get a rough estimate.','us_zip_code_data','location ruby','2008-12-25 03:00:35'),(108,'Bingo!  Distance between two points on Earth','As a follow-up to my previous post, I have found two ways of finding the distance between two cities in the US.  One is slow and more correct, one is less slow and less correct.\r\n\r\nFirst, the slow one.  You can take the third formula from the Wikipedia entry for <a href=\"http://en.wikipedia.org/wiki/Great-circle_distance#Formulas\">finding the great-circle distance</a>.  It translates pretty naturally into any language, but involves many trigonometric functions, squares, square roots, etc.  It\'s quite ugly an inelegant in code, and quite slow.\r\n\r\nIn Ruby, it looks something like this (the <code>lat</code> and <code>rlat</code> accessors return the latitude in degrees and radians, respectively, and similarly for longitude with <code>lon</code> and <code>rlon</code>).\r\n\r\n<pre name=\"code\" class=\"ruby\">  def distance_miles_slow(other)\r\n    3956.54938 * Math.atan2(Math.sqrt((Math.cos(other.rlat) *\r\n        Math.sin(other.rlon - rlon)) ** 2 +\r\n      (Math.cos(rlat) * Math.sin(other.rlat) - Math.sin(rlat) *\r\n        Math.cos(other.rlat) * Math.cos(other.rlon - rlon)) ** 2),\r\n      (Math.sin(rlat) * Math.sin(other.rlat) + Math.cos(rlat) *\r\n        Math.cos(other.rlat) * Math.cos(other.rlon - rlon)))\r\n  end</pre>\r\n\r\nUgh.\r\n\r\nIt turns out that my naïve method of simply using the Pythagorean theorem after finding the \"linear\" distance in latitude and longitude (from <a href=\"http://en.wikipedia.org/wiki/Geographic_coordinate_system#Expressing_latitude_and_longitude_as_linear_units\">here</a>) is actually pretty good.  Not as accurate, as the rougher figures seem to be off by about 2% at moderate distances (less than 1,000 miles), which is good enough for me at the moment.\r\n\r\nHere\'s what the Ruby for that look like:\r\n\r\n<pre name=\"code\" class=\"ruby\">  def distance_miles_fast(other)\r\n    dlat = lat - other.lat\r\n    drlon = rlon - other.rlon\r\n    Math.sqrt((68.9100652 * dlat)**2 +\r\n      (drlon * 3956.54938 * Math.cos(rlat))**2)\r\n  end</pre>\r\n\r\nA little bit better, and at least a bit faster.','bingo_distance_between_two_points_on_earth','programming distance ruby','2008-12-25 20:40:39'),(109,'<em>The Curious Case of Benjamin Button</em>','I intend to go see <em>The Curious Case of Benjamin Button</em> this weekend.  While quickly looking it up on the Internet, I realized that the original short story was published in 1921, and would therefore have fallen out of copyright.\r\n\r\nSo, I decided to read it.  I found it on <a href=\"http://www.gutenberg.org/ebooks/6695\">Project Gutenberg</a>, but the copy is (of course) in plain, vanilla ASCII, and has several typos.\r\n\r\nI decided then to quickly typeset it so that I would feel more better when reading it.\r\n\r\nFeel free to download it <a href=\"http://www.caswenson.com/pub/button.pdf\">here</a>.\r\n\r\nI typeset it with Adobe InDesign in Adobe Garamond Pro 12pt.  It\'s about 11 pages and change long, double-column format.\r\n\r\nI fixed some of the Gutenberg-isms (like using \"_whatever_\" to indicate italics), and corrected what I could as far as typos.  There\'s one case where the word \"array\" is used, and I can\'t find an original source to tell me if that is a mis-OCR for \"army\" (which would make more sense today, but array could be correct, if a bit arcane).\r\n\r\nI liked the short story, but I feel that the movie will give a sense of time passing that the short story rather lacks.','emthe_curious_case_of_benjamin_buttonem','typesetting literature','2008-12-27 03:03:51'),(110,'Fail Mail','I do some freelance web development, and one of the things I\'ve found most annoying is when a a 500 error occurs on my Rails sites, I hear about I from the customer.  What\'s even worse is that I often have no idea what the erorr that occurred is, and the customer may not know exactly how the application failed.  Pouring through the server logs can be a bit tedious, especially if there has been a lot of traffic.\r\n\r\nEnter Fail Mail, a.k.a., the <a href=\"http://wiki.rubyonrails.org/rails/pages/ExceptionNotification\">Exception Notification</a> plugin for Rails.  Assuming you have ActionMailer installed and configured, there are about three steps needed to ensure that you automatically receive an email message every time your application crashes.  (It doesn\'t notify you if it was a 404, which is probably for the best.)\r\n\r\nLooks like I need to go reinvent the wheel for to make it work on this blog, now &hellip;\r\n','fail_mail','rails fail plugin','2008-12-31 01:16:39'),(111,'Project Euler','One of my new favorite hobbies / time sinks is <a href=\"http://projecteuler.net/\">Project Euler</a>.  Simply stated: a few hundred programming problems that are somewhat math-related.  They are sort of like brain teasers for programming nerds.\r\n\r\nOne of my favorite features is that most of the problems have many ways to approach it.  Usually there is a terrible way, such as brute force, and then there is some elegant way.  Or, maybe, the elegant way is just clever uses of data structures.\r\n\r\nFor example, here is problem 45:\r\n\r\n<blockquote>\r\nTriangle, pentagonal, and hexagonal numbers are generated by the following formulae:\r\n\r\nTriangle: T(n)=n(n+1)/2    1, 3, 6, 10, 15, ...\r\n\r\nPentagonal: P(n)=n(3n−1)/2    1, 5, 12, 22, 35, ...\r\n\r\nHexagonal: H(n)=n(2n−1)    1, 6, 15, 28, 45, ...\r\n\r\nIt can be verified that T(285) = P(165) = H(143) = 40755.\r\n\r\nFind the next triangle number that is also pentagonal and hexagonal.\r\n</blockquote>\r\n\r\nWhen I first wrote this up in Python, I did it in a naive manner: simply constructing giant lists of each of the numbers and checking intersections.\r\n\r\nLet\'s put it this way.  The next intersection does not happen for a long, long time.  Doing it this way takes about 6.5 minutes to run on my machine.  You can just <strong>feel</strong> the quadratic nature of the running time.\r\n\r\nThere is actually a slightly more clever way to do it in linear time, which lowers this to about 0.1 seconds to run.  See if you can find it.','project_euler','programming fun','2009-01-24 19:40:46'),(112,'The perfect programming language','I\'ve been doing a lot of programming lately, and in a multitude of different languages.  For the most part, these are pretty \"decent\" languages: C, Python, Ruby, etc.  However, none of the languages really makes me happy.\r\n\r\nIt\'s hard to define exactly what I mean by \"happy\".  They\'re all, for the most part, <a href=\"http://xkcd.com/353/\">fun</a> to program in to various degrees.  But I don\'t really feel like I have all of the power at my fingertips in any of them.  For example:\r\n\r\n<ul>\r\n<li>Python is used for general purpose whatever.  It\'s powerful, easy to read, easy to write, and fast.</li>\r\n<li>C is used for speed.  When I need to be screaming down the highway, I break down and code in C (perhaps callable in a higher-level language).</li>\r\n<li>Ruby is used for much of my web development.</li>\r\n</ul>\r\n\r\nI don\'t really find Python that well-suited for web development, although I use it that way quite often, just as much as I find Ruby to be a bit odd at general purpose computing (say, doing a <a href=\"http://projecteuler.net/\">Project Euler</a> problem).  And I don\'t really break out the C unless I have to.  It makes a two-week-long Python program turn into a three-month adventure in passing structs around.\r\n\r\nSome people have commented that maybe what I need is C++, especially with the Boost libraries.  It\'s not as easy as Python, but not as ridiculous as C all the time.  And they may be right, but I\'m not quite sold yet.\r\n\r\nThe primary reason for my displeasure with C++ is primarily two things.  First, it\'s syntax is stuck back <a href=\"http://en.wikipedia.org/wiki/B_(programming_language)\">in 1969</a>.  Why do we need so many braces, so many semi-colons?  The overused and overloaded <tt>&</tt>, <tt>*</tt>, <tt>^</tt>, etc. operators really bother me, as they make things just so terse and ugly.  I mean, if I wanted to see a statement that looked like line noise, I\'d use Perl or <a href=\"http://en.wikipedia.org/wiki/APL_(programming_language)#Examples\">APL</a>.\r\n\r\nSecond, related to the above, C++ is extremely powerful and large, and it takes a long time to master.  I don\'t believe that languages should take a long time to master.\r\n\r\nWhich brings me to Ruby.  Ruby is not quite as bad as C++ in the long time to master, though it\'s still a far cry from Python.  And Ruby is <em>almost</em> what I need (I think it has some of the best syntax of any language ever), but it\'s still not quite there.\r\n\r\n<ul>\r\n<li>Ruby is <em>slow</em>.  I can\'t really compile it, and it has so many language features that really bog it down, not all of which I feel are necessary (see next bullet).</li>\r\n<li>Ruby is weird.  Most people who have been exposed to OOP know what a class variable and an instance variable is, but what the hell is a <a href=\"http://railstips.org/2006/11/18/class-and-instance-variables-in-ruby\">class instance</a> variable?  Reading through <a href=\"http://www.amazon.com/gp/product/0596516177?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0596516177\">The Ruby Programming Language</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0596516177\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> (which is a great book, btw), Ruby has a lot of really complicated things going on when doing variable and method name resolution involved with the myriad of different ways things are inherited.  It bothers me a lot.</li>\r\n<li>Ruby makes it worse by attempting to explicitly declare the scope of a variable with var, $var, @var, @@var.  Often, this just makes things worse.</li>\r\n</ul>\r\n\r\nSo, Ruby isn\'t quite there.\r\n\r\nPython?  Well, it\'s much faster (an order of magnitude or thereabouts).  It doesn\'t have a lot of weird inheritance issues (only some).\r\n\r\nMy biggest problem is the direction that Python is taking with Python 3.0.  Changing <tt>map()</tt> and friends to return iterators?  Making <tt>print</tt> a function?  Further confusing me regard to <a href=\"http://docs.python.org/dev/3.0/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit\">text vs. unicode vs. data vs. bytes vs. strings vs. regular expressions</a>?   <a href=\"http://docs.python.org/dev/3.0/whatsnew/3.0.html\">And so forth.</a>\r\n\r\nAnd even syntactically there are problems: Why are there colons at the end of def/if/for/... statements?  And is it really necessary to have syntactically important whitespace?  I don\'t mind it, but a lot of people hate this with a passion.\r\n\r\nSo, what I need is a language that can be compiled (and run at great speeds), with Ruby-like syntax, and a Python-like typing and object model.\r\n\r\nThat would be nice, thank you.\r\n\r\n<hr />\r\n\r\n<small>And yes, if I get some time, I might consider forking a project related to one of the above to get what I want.</small>','the_perfect_programming_language','ruby python programming c c++ gcc','2009-02-16 22:55:13'),(113,'Responsible Development Practices: Storing Sensitive Information','I build and maintain web sites.  I manage probably hundreds of online accounts or logins or passwords that I need access to semi-regularly.  Organizing all of this information can be a bit of a pain.\r\n\r\nI\'ve heard people swear by spreadsheets or plain text files for storing this information, and there are some specialized programs out there meant to catalog and organize this for you.\r\n\r\nMy solution is one of the simpler: <a href=\"http://www.tiddlywiki.com/\">TiddlyWiki</a>.  It\'s a small (few hundred K), self-contained (one HTML file), free file you can carry with you to store lots of information.  I simply create some big list tiddlers (what they call their wiki pages), each one of which links to a specific tiddler for one particular task.  So, I have a list for all of the web sites I maintain, and the tiddler for each has MySQL information, passwords, and any other crucial information.\r\n\r\nThis is great, but there are two problems.  One, I am putting all of critical info in one place.  To fix this, I maintain copies of this wiki file in several places, such as my thumb drive, laptop, and DropBox.\r\n\r\nThe second catch is then, what if someone finds this file?  Wouldn\'t they have access to everything?  This is why encryption is important.  Whenever the file needs to be transported somewhere (like, on my thumb drive or put into DropBox), I first encrypt it.  <a href=\"http://www.gnupg.org/\">GPG is nice for this</a>, but in a pinch, you can just use the ever-present OpenSSL to encrypt a file with something <a href=\"http://www.madboa.com/geek/openssl/#encrypt-simple\">like</a>:\r\n\r\n<pre>openssl enc -aes-256-cbc -salt -in file.html -out file.html.encrypted</pre>\r\n\r\nNow, as long as I remember <strong>this</strong> password, I can safely pass this encrypted file around without any worries about losing my thumb drive in the airport.\r\n\r\nFor most of the actual machines I log into via SSH, I simply use <a href=\"http://sial.org/howto/openssh/publickey-auth/\">public key authentication</a>, that way I don\'t have to remember the passwords.','responsible_development_practices_storing_sensitive_information','development passwords practices tiddlywiki','2009-04-19 18:46:54'),(114,'Netbook','I finally convinced myself to buy a netbook recently.  I am currently typing this post on it.\r\n\r\nI got an Asus EeePC 1000HA &ndash; that is, it\'s got a 10&quot; screen, 160 GB hard drive (regular, not solid state), and a 6-cell battery (4.5 hours or so battery life under real-world conditions, I estimate).  I\'m pretty thrilled about it: typing is fine (though the right shift key has some adjustment time), the screen is nice and crisp, and it is very snappy under Windows XP and in Linux.  The 1.6 GHz Atom CPU is <strong>just</strong> enough to play Netflix Instant videos, which was the only thing I was worried about performance-wise.\r\n\r\nMy biggest complaint was the wireless performance in various types of Ubuntu Linux (the newest 9.04 Netbook Remix is by far my favourite).  I\'d see 500+ ms ping time to my router, and drop about half of my packets, etc.  It was miserable, and pretty much unusable.  It turns out that the open source Atheros driver doesn\'t support this particular chipset very well, and the proprietary madwifi-based driver from Atheros doesn\'t support it at all.  The only decent solution was to use the ndiswrapper package with Asus\'s Windows driver, which makes me feel a bit dirty.\r\n\r\nBut regardless, with all that sorted out, I won\'t be booting up Windows much more.\r\n\r\nOverall, I\'m impressed and very happy with my purchase.','netbook','netbook wireless drivers linux ubuntu','2009-04-25 02:55:14'),(115,'Presentations now up on slideshare','Someone recently requested that I post some of my older presentations on miscellaneous topics.\r\n\r\nWhen I was more actively involved with teaching and research at <a href=\"http://www.utulsa.edu/\">The University of Tulsa</a>, I would often give presentations on random things.  Programming, research I was doing, my anal retentiveness, whatever.  We often had weekly meetings for most of my graduate program, so I would give talks there, or at ACM meetings.\r\n\r\nI have been tracking some of these down and posting them to <a href=\"http://www.slideshare.net/caswenson/slideshows\">my slideshare account</a>, although I will maintain a list of them (as well as descriptions) <a href=\"http://www.caswenson.com/presentations\">here on this site</a> (you can always see them on the slide bar.\r\n\r\nAs a sample, here is one that is based on some (abandoned) research I did on applying genetic programming to chess.\r\n\r\n<div style=\"width:425px;text-align:left\" id=\"__ss_1448288\"><a style=\"font:14px Helvetica,Arial,Sans-serif;display:block;margin:12px 0 3px 0;text-decoration:underline;\" href=\"http://www.slideshare.net/caswenson/better-chess-through-genetic-programming?type=powerpoint\" title=\"Better Chess through Genetic Programming\">Better Chess through Genetic Programming</a><object style=\"margin:0px\" width=\"425\" height=\"355\"><param name=\"movie\" value=\"http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=seminar-gp-090517132642-phpapp02&stripped_title=better-chess-through-genetic-programming\" /><param name=\"allowFullScreen\" value=\"true\"/><param name=\"allowScriptAccess\" value=\"always\"/><embed src=\"http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=seminar-gp-090517132642-phpapp02&stripped_title=better-chess-through-genetic-programming\" type=\"application/x-shockwave-flash\" allowscriptaccess=\"always\" allowfullscreen=\"true\" width=\"425\" height=\"355\"></embed></object><div style=\"font-size:11px;font-family:tahoma,arial;height:26px;padding-top:2px;\">View more <a style=\"text-decoration:underline;\" href=\"http://www.slideshare.net/\">presentations</a> from <a style=\"text-decoration:underline;\" href=\"http://www.slideshare.net/caswenson\">caswenson</a>.</div></div>','presentations_now_up_on_slideshare','presentations','2009-05-17 18:53:08'),(116,'Bypassing the Python GIL with ctypes','I recently read an interesting <a href=\"http://entitycrisis.blogspot.com/2009/06/python-threading-is-fundamentally.html\">article</a> (actually, the slides linked to) about the horror that is the Global Interpreter Lock in Python, especially with multicore CPUs.  And I agree — in these cases, the GIL is painful.\r\n\r\nMy favorite way of bypassing the GIL is to use <a href=\"http://docs.python.org/library/ctypes.html#finding-shared-libraries\">ctypes</a>, a wonderful library that allows you to easily link to dynamic libraries and call the functions from C, with only a small amount of boilerplate (to map function calls, argument types, and return types).\r\n\r\nThe best feature of <tt>ctypes</tt> is that when a program is executing a ctypes function, it <strong>releases the GIL</strong>.  Meaning that if you have more than one thread threads, and one of them is busy with a <tt>ctypes</tt> call, the other threads can go along their merry way.\r\n\r\nIn the slides above, he shows that Python CPU-intensive multithreaded applications slow down as the number of CPUs increase.  Well, I decided to use a quick counterexample.\r\n\r\nFirst, I create a C file to do some work for me, called <tt>test.c</tt>:\r\n<pre name=\"code\" class=\"c\">int test(int from, int to)\r\n{\r\n  int i;\r\n  int s = 0;\r\n \r\n  for (i = from; i < to; i++)\r\n    if (i % 3 == 0)\r\n      s += i;\r\n \r\n  return s;\r\n}</pre>\r\nTo compile this as a dynamic shared library under OS X, the following two commands can be used:\r\n<pre>gcc -g -fPIC -c -o test.o test.c\r\nld -dylib -o libtest.dylib test.o</pre>\r\n(Under Linux, replace this last line with <tt>ld -shared -o libtest.so test.o</tt>)\r\n\r\nThen, we can use the following Python program to load the dynamic library and run a quick test (should work in Linux or OS X):\r\n<pre name=\"code\" class=\"python\">import ctypes\r\nimport ctypes.util\r\nimport threading\r\nimport time\r\n \r\ntestname = ctypes.util.find_library(\'test\')\r\ntestlib = ctypes.cdll.LoadLibrary(testname)\r\n \r\ntest = testlib.test\r\ntest.argtypes = [ctypes.c_int, ctypes.c_int]\r\n \r\ndef t():\r\n  test(0, 1000000000)\r\n \r\nif __name__ == \'__main__\':\r\n  start_time = time.time()\r\n  t()\r\n  t()\r\n  print \"Sequential run time: %.2f seconds\" % (time.time() - start_time)\r\n \r\n  start_time = time.time()\r\n  t1 = threading.Thread(target=t)\r\n  t2 = threading.Thread(target=t)\r\n  t1.start()\r\n  t2.start()\r\n  t1.join()\r\n  t2.join()\r\n  print \"Parallel run time: %.2f seconds\" % (time.time() - start_time)</pre>\r\nOn my quad-core OS X box, I get the following output:\r\n<pre>Sequential run time: 13.27 seconds\r\nParallel run time: 6.66 seconds</pre>\r\nA pretty solid doubling of performance, which is what we would hope.','bypassing_the_python_gil_with_ctypes','python programming gil ctypes c','2009-06-13 01:45:34'),(117,'Python Remote Debugger Announcement','<div style=\"margin: 5px; float:right;\"><img src=\"http://m.caswenson.com/images/python_debugger_web_page_v0.2.png\" /></div>\r\nRecently, I desired to have a simple Python function I could call with as little fuss as possible that would start up some kind of server that I could use to tell what is going on inside my program at a later date, without resorting to some kind of logging system or console output.\r\n\r\nBehold, a simple <a href=\"http://github.com/swenson/python_remote_debugger\">Python Remote Debugger</a>.\r\n\r\nWell, it\'s not really a debugger (yet).  It\'s more of a \"Current State of the System\".\r\n\r\nThere are two servers shipped with it: a plain, pickle-based server (meant to be used to develop richer applications, though it may be abandoned in the future), and a simple web server, based on <a href=\"http://www.cherrypy.org\">CherryPy</a>.\r\n\r\nIt\'s still in beta, but has many neat features, including:\r\n<ul>\r\n  <li>Listing of all currently running threads.  Each entry includes a snapshot of the values of all of their local and global variables, as well as the current stack trace.</li>\r\n  <li>Listing of all loaded modules</li>\r\n  <li><code>sys.path</code> listing</li>\r\n  <li>SSL support</li>\r\n  <li>Simple username / password authentication</li>\r\n</ul>\r\n\r\nI would be more than happy to take feature requests.  Though, the source is available, fairly simple (and hopefully easy to use), and licensed under the MIT license, so you are free to use or modify it as you see fit.\r\n\r\nIf I have time in the future, I would love to develop some kind of fancy Ajax-based actual remote debugger, with IPython-like functionality, but it probably won\'t happen for a while.','python_remote_debugger_announcement','python debugging remote cherrypy','2009-07-13 04:43:25'),(118,'Brilliant programming','Often, I like to read articles on particularly insightful programming techniques or algorithms.  Sometimes these algorithms are for some fairly mundane things, like searching and sorting.  (So mundane, of course, that Knuth wrote a <a href=\"http://www.amazon.com/gp/product/0201896850?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=0201896850\">whole book</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=0201896850\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /> about it.)\r\n\r\nTwo pieces I have enjoyed recently.\r\n\r\nFirst, <a href=\"http://bugs.python.org/file4451/timsort.txt\">timsort</a> &ndash; the sorting algorithm used by Python.  It describes an interesting approach to mergesort that is stable and incredibly fast, especially for \"almost\" sorted arrays.\r\n\r\nSecond is a class: <tt><a href=\"http://sources.redhat.com/cgi-bin/cvsweb.cgi/libc/string/strlen.c?cvsroot=glibc&rev=1.1.2.1\">strlen()</a></tt>, from glibc.  <tt>strlen()</tt>, for you non-C programmers, finds the length of a null-terminated string.  So, simply, given a location in memory, it finds the next zero byte.  Sounds easy?  Well, it is, but there are several tricks you can to do speed up the search by quite a bit.\r\n\r\nAny other favorite snippets of code out there?','brilliant_programming','programming sorting searching','2009-08-14 07:08:41'),(119,'Gentoo Linux FTW?','<span style=\"float: right; margin: 3px\"><img src=\"http://m.caswenson.com/images/gentoo-logo.png\" /></span>For the past 6 years or so, <a href=\"http://www.gentoo.org/\">Gentoo</a> has been my preferred distribution of Linux on the server side<sup>*</sup> for many reasons.\r\n\r\nBut, that doesn\'t stop me from laughing uncontrollably at Gentoo\'s <a href=\"http://uncyclopedia.wikia.com/wiki/Gentoo\">Uncyclopedia</a> entry.  Pull quote from the top:\r\n\r\n<blockquote>“Stop staring at my output; you have no life!”<br />  ~ GCC on Gentoo users </blockquote>\r\n\r\nI have to admit — Gentoo is Linux at its most pretentious and obnoxious.  Maybe I\'m an elitist, but I still use and love it.\r\n\r\nWhy?  What keeps me <tt>emerge</tt>-ing year after year?\r\n\r\n<ul>\r\n<li>I <strong>know</strong> Gentoo.  I\'ve been working with it for years, and when things go wrong, I know where to look and how to fix it.  This is also partially due to the fact that it has (arguable, and in my opinion) one of the simplest overall system designs.  I don\'t need a GUI to fix it, which is really handy for my remote installs where I won\'t even install a GUI.</li>\r\n<li>It\'s fast.  The rumors are true — if you know what you are doing and you take some time to do it, you can build a very fast system.</li>\r\n<li>Upgradeable.  The whole system can be easily brought up to speed by resyncing and emerging world.  The only thing you ever have to reboot for is a kernel change, and you\'ll never have to reinstall to upgrade \"versions\".  Gentoo doesn\'t have versions.</li>\r\n<li>Up/downgradeable.  If I want a custom-built version of, say, apache built, I can easily build such a thing and install it.  If it is completely broken, I can easily uninstall it.  And, 99% of the time, I won\'t ever have to open up the source and run <tt>./configure --prefix=/opt/apache2 && make && sudo make install</tt> to do it, and I won\'t have to just hope that it won\'t clobber my files.</li>\r\n</ul>\r\n\r\nThe first point is one primary reason I don\'t switch: I am locked in.  I would maybe try Debian or Ubuntu for a server setup, but I\'d be shaking in my boots waiting for something to break and not knowing where to start fixing the problem.\r\n\r\nMy biggest complaint about Gentoo?  It doesn\'t deal well with bleeding edge Ruby gems.  Meaning, Gentoo tries to install Ruby packages like Gentoo packages, but Gentoo packages are not always up-to-date or complete for all of the gems that are out there.  So, there tend to be version problems and weird configuration errors if you start maintaining your own gem install somewhere.  I\'m not really sure whose fault this problem is.\r\n\r\nAside from this minor fault and the reputation that Gentoo gets for being elistist and complicated, I will be sticking to strange, bloated Pacman for the foreseeable future.\r\n\r\n<br />\r\n<hr />\r\n\r\n<sup>*</sup> My preferred distribution for desktop?  Mac OS X. :) Sorry Linux, you just don\'t feel as smooth and silky in my hands with a GUI.  The slick GUI that OS X gives me beats any minor incompatibility problems I have, or the fact that OS X uses strange broken BSD versions of some command-line tools, like <tt>sed</tt>.','gentoo_linux_ftw','linux gentoo funny','2009-08-23 06:01:06'),(120,'Assembly language programming under OS X with NASM','One of my favorite passions from my teenage days was assembly language programming.  Don\'t laugh.\r\n\r\nIt embodies a lot of my favorite things about programming: I have total control, it is clean and simple, and it is just and fast and functional as I am capable of making it.  The only thing standing in the way of me and world domination is how well I can program.\r\n\r\nWell, with some minor exceptions.  Having a decent assembler is really key, and for x86 architectures, there are many choices.  If you are hacking a small function together to support some higher-level language, then maybe you can get by using <a href=\"http://en.wikipedia.org/wiki/Microsoft_Macro_Assembler\">MASM</a> (for Windows/DOS), or, if you really hate yourself, <a href=\"http://en.wikipedia.org/wiki/GNU_Assembler\">gas</a> (for every platform).\r\n\r\nBut, if you intend to spend some time programming in assembly and not hating every minute of it, then you need to use <a href=\"http://en.wikipedia.org/wiki/Netwide_Assembler\">NASM</a>, probably the best assembler for the x86 family, ever (or possibly <a href=\"http://en.wikipedia.org/wiki/Yasm\">Yasm</a>, a NASM clone that I have no experience with).\r\n\r\nSo, this past week I was interested in playing some more with NASM, and so I thought that I would see how what I could do under OS X (I previously worked primarily in DOS).  Unfortunately, assembly language support in OS X is fairly hampered if you want follow its <a href=\"http://developer.apple.com/mac/library/DOCUMENTATION/DeveloperTools/Conceptual/LowLevelABI/130-IA-32_Function_Calling_Conventions/IA32.html#//apple_ref/doc/uid/TP40002492-SW4\">standard calling conventions</a> for 32-bit x86 code.  The innocuous-looking statement \"The stack is 16-byte aligned at the point of function calls\" seems innocent, but is a nightmare if you using external calls.\r\n\r\nBasically, this means that you have to keep very close track of your stack size when calling functions.  And even worse is that your stack never enters your function correctly aligned: the return address is always 4 bytes long, meaning you are always 12 bytes off when you start.\r\n\r\nWhat this means is that I may have to use a VM with Linux to have any fun with assembly language programming again.\r\n\r\nIf anyone is interested, here is a quick NASM file I threw together that demonstrates how to use NASM on OS X to call glibc functions.  I tested it with the latest NASM (2.07) on Snow Leopard (you\'ll probably need XCode installed to get this to work).  This program prints \"Hello World\", allocates some memory using <code>malloc</code>, uses that memory to write 10 letters of the alphabet on the screen (using <code>printf</code>), <code>free</code>s the memory, and returns.\r\n\r\n<pre name=\"code\" class=\"nasm\">\r\n;\r\n; Basic OS X calls to glibc\r\n;\r\n; compile with:\r\n; nasm -g -f macho malloc.asm\r\n; gcc -o a.out malloc.o\r\n;\r\n \r\n; glibc stuff\r\nextern _puts, _printf, _malloc, _free\r\n \r\n; static data\r\nsegment .data\r\n \r\nhello_world_str db \"Hello world!\", 10, 0\r\nint_str db \"Address %x\", 10, 0\r\n \r\n; code\r\nsegment .text\r\n \r\nglobal _main\r\n \r\n_main:\r\n        push ebp ; setup the frame\r\n        mov  ebp, esp\r\n \r\n        sub  esp, 4 ; align the stack\r\n        push dword hello_world_str\r\n        call _puts\r\n        add  esp, 4\r\n \r\n        ; malloc 16 bytes\r\n        push  dword 16\r\n        call  _malloc\r\n        add  esp, 4\r\n \r\n        ; check if the malloc failed\r\n        test  eax, eax\r\n        jz    fail_exit\r\n         \r\n        sub   esp, 0xC ; align the stack\r\n        mov   ebx, eax\r\n        push  ebx\r\n        push  dword int_str\r\n        call  _printf\r\n        add   esp, 8\r\n        add   esp, 0xC\r\n \r\n        ; print \"A\\nB\\n...\"     \r\n        mov   [ebx], dword 0xD41 ; \'A\\n\'\r\n \r\n        mov   edi, 10\r\n        push  ebx\r\n_loop:\r\n        call  _puts\r\n        inc  dword [ebx] \r\n        dec  edi \r\n        jnz  _loop\r\n \r\n        add  esp, 4\r\n         \r\n        ; free the malloc\'d memory\r\n        push  ebx\r\n        call  _free\r\n        add  esp, 4\r\n        add  esp, 4 ; cleanup the stack \r\n        pop  ebp\r\n        ret\r\n         \r\nfail_exit:\r\n        mov  eax, 1\r\n        pop  ebp\r\n        ret\r\n</pre>\r\n\r\nThe output should look something like this:\r\n\r\n<pre>Hello world!\r\n \r\nAddress 100130\r\nA\r\nB\r\nC\r\nD\r\nE\r\nF\r\nG\r\nH\r\nI\r\nJ\r\n</pre>\r\n\r\nAm I the only one who likes assembly language programming these days?','assembly_language_programming_under_os_x_with_nasm','nasm mac osx assembly programming','2009-09-26 17:10:31'),(121,'Responsible administration for you and your users','When I was constructing my own websites, for myself or for clients, I was always bothered by one thing:\r\n\r\nI didn\'t have an SSL certificate for any of my domains.\r\n\r\nThis is due to many reasons: SSL certificates are tied to a single domain, they cost a lot of money, and they are tied to an IP address, which can make shared hosting hard.  Furthermore, I don\'t feel that shelling out money for some SSL authority to issue me a certificate really <strong>means</strong> anything &ndash; why are they qualified to say anything (good or bad) about my website.\r\n\r\nUnfortunately, there are only two alternatives: don\'t use SSL, or use a self-signed SSL certificate.\r\n\r\nNot using SSL is not really an option if you are sending sensitive information of any kind over the Internet.  For example, the password to login to the backend of any site.\r\n\r\nIf you have a user-facing website that is selling things, i.e., asking people for their credit card information, you don\'t have much of a choice.  You really need to use SSL, and you have to use a real registered SSL certificate, since you don\'t want to scare away users.\r\n\r\nHowever, for almost any other case, I think that they are just not necessary.  Take this website, for example: the only person who logs into this domain is me.  I certainly trust any certificate I sign, so a self-signed certificate makes a lot of sense.  I can go ahead and \"Accept the risk\", as Firefox asks me to, and confirm an exception for my own site.  I will then sleep easy knowing that my password is sent encrypted.\r\n\r\nEven if I make a site for a client, I would be happy to give them the option: we can use this self-signed certificate for you to login to the backend, or they can front the cost for a \"real\" SSL certificate.  However, nobody likes to waste money, and buying a certificate for only a few people to use a backend is a silly idea.\r\n\r\nCreating a self-signed certificate with OpenSSL is <a href=\"http://www.akadia.com/services/ssh_test_certificate.html\">easy</a>, and installing it in Apache is also <a href=\"http://www.digicert.com/ssl-certificate-installation-apache.htm\">easy</a>.\r\n\r\nDon\'t let you or your clients down by neglecting to give them the option for free SSL.\r\n\r\nExtra credit question: why aren\'t there are any free SSL signing authorities out there?','responsible_administration_for_you_and_your_users','certificates servers administration','2009-12-17 02:14:43'),(122,'Language Implementation Patterns','<div style=\"float: left; margin-right: 5px;\"><a href=\"http://www.amazon.com/gp/product/193435645X?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=193435645X\"><img border=\"0\" src=\"http://m.caswenson.com/images/parr_lang.jpg\"></a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=193435645X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" /></div>One thing I am constantly thinking about is programming languages: implementing them, designing them, using them.  The latter two are just fun, but implementing languages is a tricky business, and can be difficult and time-consuming.\r\n\r\nThere are some tools for helping you implement a language, such as the classical <a href=\"http://dinosaur.compilertools.net/\">lex and yacc</a> lexical analyzer and parser generator, respectively, or the more modern <a href=\"http://www.antlr.org/\">ANTLR</a>, a combination of both.\r\n\r\nHowever, learning how to even use these tools, or when to, is also difficult.  Enter <a href=\"http://www.amazon.com/gp/product/193435645X?ie=UTF8&tag=mathfigu-20&linkCode=as2&camp=1789&creative=390957&creativeASIN=193435645X\">Language Implementation Patterns</a><img src=\"http://www.assoc-amazon.com/e/ir?t=mathfigu-20&l=as2&o=1&a=193435645X\" width=\"1\" height=\"1\" border=\"0\" alt=\"\" style=\"border:none !important; margin:0px !important;\" />.  This book, by Terence Parr (inventor of ANTLR, no less), attempts, quite successfully, to introduce the common patterns that you will use in implementing a language, with or without a parser-generator like ANTLR.\r\n\r\nMost of all, I say that it is about freaking time for a book like this to come out.  Compiler books have been mostly stagnating these past few years, and while this doesn\'t cover some of the more advanced optimization techniques and the like, it does a thorough job of showing how modern compilers are built.  Bravo, Terence.','emlanguage_implementation_patternsem_','programming languages antlr','2010-02-09 17:21:40'),(123,'Task','I recently discovered <a href=\"http://taskwarrior.org/projects/show/taskwarrior/\">task</a>, a powerful, yet simple, command-line to-do and task management tool.  Up until now, I hadn\'t found any way to manage to-do lists that felt \"right\".  But task has changed that for me.\r\n\r\nOne feature I feel is missing (though I think they are planning on <a href=\"http://taskwarrior.org/wiki/taskwarrior/Features\">fixing this</a>) is the lack of email notifications.  I would really like to know what I have to do today, and I may not always remember to login and check, especially in my current transition period of getting used to using it everyday.\r\n\r\nSo, I set up <a href=\"http://en.wikipedia.org/wiki/Cron\">cron</a> on my system to email my current list (that is due today) every day.  For those of you following along at home, you can do the same with something like so added to your crontab (<code>crontab -e</code>):\r\n\r\n<pre>SHELL=/bin/bash\r\n1 0 * * * task list due:today | mail -s \"Due `date \'+\\%A, \\%m/\\%d/\\%Y\'`\" your@emailaddress.com</pre>\r\n\r\n(Note that you have to escape the percent signs in a crontab line.)\r\n\r\nJust a quick update &mdash; trying to get back into the habit of posting.','task','todo gtd','2010-04-27 22:42:30'),(124,'sliderepl for Sage','<a href=\"http://discorporate.us/projects/sliderepl/\">sliderepl</a> is a really neat Python presentation tool for demonstrating code, live, in a slide-like format.  Essentially, you organize your code into \"slides\", which you can then scroll through (though you can\'t go back, really).  The tool was written originally by <a href=\"http://discorporate.us/jek/\">Jason Kirtland</a>.\r\n\r\nI wanted to see if I could use it for <a href=\"http://www.sagemath.org\">Sage</a> code as sort of a GUI-less notebook thing.  Kind of.  Unfortunately, sliderepl is full of hacky magic, involving embedding an interpreter and introspection.  Sage is too, and so they don\'t like each other very much.\r\n\r\nThrough some more magic, I figured out how to get them to work together anyway, and released the code on Github as <a href=\"http://github.com/swenson/sage_sliderepl\">sage_sliderepl</a>.','sliderepl_for_sage','sage sliderepl','2010-05-20 01:44:24'),(125,'Intel Threading Challenge 2010, ICFP 2010','I\'m a sucker for programming contests, and have been since high school.\r\n\r\nI thought I would post here about one ongoing contest and one upcoming one.\r\n\r\nFirst, the <a href=\"http://software.intel.com/en-us/contests/threading-challenge-prof-2010/codecontest.php\">Intel Threading Challenge</a> has already started.  Essentially, it a little programming contest that is supposed to test your ability to program effectively for a large multi-threaded task.  The \"Master\" section this year is writing a program to compute a simple and laborious graph theoretic property.\r\n\r\nSecond, the annual <a href=\"http://icfpcontest.org/\">ICFP programming contest</a> is right around the corner.  Although nominally a functional programming contest, anyone can enter in any language.  It\'s an super-fun, intense 72-hour competition.  If you want to try to place, I recommend having a group of about 2&ndash;4 strong programmers.  I won\'t be able to compete this year because of a scheduling conflict. :(','intel_threading_challenge_2010_icfp_2010','programming contests','2010-06-06 21:41:06'),(126,'Wordpress, Thesis, and the GPL','There\'s been <a href=\"http://mixergy.com/chris-pearson-matt-mullenweg/\">some hubbub</a> going around the web about Wordpress potentially suing a developer for breaching the GPL.\r\n\r\nThe quick run-down: Wordpress is licensed under <a href=\"http://en.wikipedia.org/wiki/GNU_General_Public_License\">GPL2</a>. Thesis is a premium Wordpress theme.\r\n\r\nThe debate really boils down to: does the GPL require Thesis to be also licensed under the GPL?\r\n\r\nThe answer: <strong>almost</strong> not, but maybe.\r\n\r\nI\'ll save you some reading.  Clause 2 of GPL2:\r\n\r\n<blockquote>\r\n&hellip; If identifiable sections of that work are not derived from the Program,\r\nand can be reasonably considered independent and separate works in\r\nthemselves, then this License, and its terms, do not apply to those\r\nsections when you distribute them as separate work. &hellip;\r\n</blockquote>\r\n\r\nIANAL, but this says, quite clearly, if it is not derived from GPL code <strong>and</strong> can be reasonably considered independent, then the GPL does not apply.\r\n\r\nThe question is, what does \"independent\" mean in this sentence.  Does it mean independent in the sense that it can run without it?  Or does it mean the code does not have any code in common with the GPL code?\r\n\r\nIt\'s unclear.  I am inclined to the second viewpoint, because the first has a lot of nasty ramifications.  However, some people, including <a href=\"http://www.gnu.org/licenses/gpl-faq.html#GPLPluginsInNF\">the FSF</a>, appear to believe in the first viewpoint (roughly speaking).\r\n\r\nUgh.  Software licensing sucks.  This is why I use the <a href=\"http://en.wikipedia.org/wiki/MIT_License\">MIT License</a>.  Mostly because I like putting some kind of license on the code, and this seems one of the least restrictive ones.','wordpress_thesis_and_the_gpl','wordpress gpl licensing thesis','2010-07-18 06:30:39'),(127,'Sorting out sorting','I <a href=\"http://github.com/swenson/sort\">recently wrote</a> a C version of a bunch of comparison-based sorting algorithms, notably timsort and quicksort.\r\n\r\n<a href=\"http://en.wikipedia.org/wiki/Timsort\">Timsort</a> is a neat, unbalanced mergesort that I\'ve been wanting to try out for the past while, and so I spent the time to write a fast C implementation of the algorithm.  My experiments on random data show about a 5-10% improvement over quicksort, which is pretty amazing.  If the data has any structure, which is extremely common, it has \"superhuman\" performance, as it can merge natural runs in the data in an efficient manner.\r\n\r\nAnother annoying thing I\'ve noticed is that I\'ve written the same sorting algorithms a ton of times, often just changing the type.  Sometimes I\'ve used the standard C <a href=\"http://fxr.watson.org/fxr/source/stdlib/qsort.c?v=GLIBC27\">qsort</a>, but the function-pointer comparison function causes awful performance (the version I wrote isn\'t even as optimized, and is still often twice as fast).  Why can\'t I just write a good, fast sorting algorithm?\r\n\r\nA solution comes from a neat trick in C: <a href=\"http://en.wikipedia.org/wiki/C_preprocessor#Token_concatenation\">token pasting</a>.  Using this, it\'s possible to write the function once, and just swap out the types as needed.\r\n\r\nUsing token pasting, it is also possible to implement the entire library as a single header file: no library to compile!\r\n\r\nSadly, sorting doesn\'t usually have <a href=\"http://www.youtube.com/watch?v=YvTW7341kpA\">sound effects</a>.','sorting_out_sorting','sorting timsort c programming','2010-10-30 03:29:39'),(128,'Monospaced font','I have been searching for years for a decent programming font (that is, monospaced). Over the years, I\'ve found various ones that suited me, but recently I found ranks as my favorite: <a href=\"http://www.cosmix.org/software/\">Droid Sans Mono, Dotted</a>.\r\n\r\n<img src=\"http://m.caswenson.com/images/droidsansmono.png\" width=\"901\" height=\"649\" alt=\"Droid Sans Mono Dotted picture\" />\r\n\r\nEssentially, cosmix created a dotted and slashed zero variant to Droid Sans Mono, part of the <a href=\"http://www.droidfonts.com/\">Droid family of fonts</a> designed for Google\'s Android operating system.\r\n\r\nThey are designed to very legible, and I have found the Sans Mono to be clean and pleasant when in the terminal or in a coding window.  It also has pretty decent Unicode support.\r\n\r\nMy previous favorite coding fonts have been: Monaco, DejaVu Sans Mono, Consolas, and Lucida Sans Console.\r\n','monospaced_font','fonts programming','2010-12-01 00:40:37'),(129,'Changes coming soon','This is the first post of the year. That\'s a little sad, but I think I am going to be redoing this site a bit in the near future.\r\n\r\nSo, some upcoming changes:\r\n\r\n* Errata for my book -- this link has been on the RHS of my page for quite a while now, and I haven\'t gotten around to compiling this errata.  I will do so in the next few days.\r\n\r\n* Notes on upcoming projects. I am currently working on several projects, open source and not, and a few writing projects. Expect more details on these.\r\n\r\n* ... and more.','changes_coming_soon','meta','2011-12-25 20:51:07'),(130,'Modern Cryptanalysis Errata updated','I have updated <a href=\"http://www.caswenson.com/mcerrata\">the errata</a> for my book, Modern Cryptanalysis.','modern_cryptanalysis_errata_updated','modern.cryptanalysis','2011-12-30 15:36:33'),(131,'What Every Programmer Should Know About Memory','I was just thinking about this paper today: Ulrich Drepper\'s \"What Every Programmer Should Know About Memory\".\r\n\r\n<a href=\"http://www.akkadia.org/drepper/cpumemory.pdf\">http://www.akkadia.org/drepper/cpumemory.pdf</a>\r\n\r\nIf you haven\'t read it, and you are a programmer, then you really need to read this paper.','what_every_programmer_should_know_about_memory','programming memory','2012-04-28 15:00:40')
